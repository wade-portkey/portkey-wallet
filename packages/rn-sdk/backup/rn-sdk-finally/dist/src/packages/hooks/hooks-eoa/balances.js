Object.defineProperty(exports,"__esModule",{value:true});exports.useAccountListNativeBalances=useAccountListNativeBalances;exports.useAllBalances=useAllBalances;exports.useCurrentNetworkBalances=useCurrentNetworkBalances;var _network=require("../network");var _react=require("react");var _index=require("./index");function useAllBalances(){return(0,_index.useAppEOASelector)(function(state){return state.tokenBalance.balances;});}function useCurrentNetworkBalances(){var balances=useAllBalances();var currentNetwork=(0,_network.useCurrentNetwork)();return(0,_react.useMemo)(function(){if(!currentNetwork.rpcUrl)return;return balances==null?void 0:balances[currentNetwork.rpcUrl];},[balances,currentNetwork.rpcUrl]);}function useAccountListNativeBalances(){var accountList=(0,_index.useAppEOASelector)(function(state){return state.wallet.accountList;});var currentNetwork=(0,_network.useCurrentNetwork)();var _ref=currentNetwork||{},nativeCurrency=_ref.nativeCurrency;var currentNetworkBalances=useCurrentNetworkBalances();return(0,_react.useMemo)(function(){if(!currentNetworkBalances||!nativeCurrency)return;var obj={};accountList==null?void 0:accountList.forEach(function(account){var _currentNetworkBalanc;var symbol=nativeCurrency.symbol;obj[account.address]=currentNetworkBalances==null?void 0:(_currentNetworkBalanc=currentNetworkBalances[account.address])==null?void 0:_currentNetworkBalanc[symbol];});return obj;},[nativeCurrency,currentNetworkBalances,accountList]);}