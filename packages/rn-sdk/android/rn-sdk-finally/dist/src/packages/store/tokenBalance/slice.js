Object.defineProperty(exports,"__esModule",{value:true});exports.updateBalance=exports.updateAccountListBalance=exports.tokenBalanceSlice=exports.initialState=exports.default=exports.clearBalance=void 0;var _toolkit=require("@reduxjs/toolkit");var initialState=exports.initialState={balances:{}};var tokenBalanceSlice=exports.tokenBalanceSlice=(0,_toolkit.createSlice)({name:'tokenBalance',initialState:initialState,reducers:{updateBalance:function updateBalance(state,action){var _state$balances$rpcUr;if(!state.balances)state.balances={};var _action$payload=action.payload,rpcUrl=_action$payload.rpcUrl,balances=_action$payload.balances,account=_action$payload.account;var balanceMap={};balances.forEach(function(item){balanceMap[item.symbol]=item.balance;});if(!state.balances[rpcUrl])state.balances[rpcUrl]={};state.balances[rpcUrl][account]=Object.assign({},(_state$balances$rpcUr=state.balances[rpcUrl][account])!=null?_state$balances$rpcUr:{},balanceMap);},updateAccountListBalance:function updateAccountListBalance(state,action){if(!state.balances)state.balances={};var _action$payload2=action.payload,rpcUrl=_action$payload2.rpcUrl,accountList=_action$payload2.accountList;if(!state.balances[rpcUrl])state.balances[rpcUrl]={};accountList.map(function(item){if(!state.balances)state.balances={};if(!state.balances[rpcUrl][item.account])state.balances[rpcUrl][item.account]={};state.balances[rpcUrl][item.account][item.symbol]=item.balance;});},clearBalance:function clearBalance(state){state.balances={};}}});var _tokenBalanceSlice$ac=tokenBalanceSlice.actions,updateBalance=exports.updateBalance=_tokenBalanceSlice$ac.updateBalance,clearBalance=exports.clearBalance=_tokenBalanceSlice$ac.clearBalance,updateAccountListBalance=exports.updateAccountListBalance=_tokenBalanceSlice$ac.updateAccountListBalance;var _default=exports.default=tokenBalanceSlice;