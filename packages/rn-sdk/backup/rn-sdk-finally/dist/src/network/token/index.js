var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.getCachedNetworkToken=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _constants=require("../../global/constants");var _core=require("../../model/verify/core");var _wallet=require("../../model/wallet");var _controller=require("../controller");var _wallet2=require("../dto/wallet");var _storage=require("../../service/storage");var _cache=require("../../service/storage/cache");var NETWORK_TOKEN_IDENTIFIER='network-token-identifier';var EXPIRE_TIME_IDENTIFIER='network-token-expire-time-identifier';var getCachedNetworkToken=exports.getCachedNetworkToken=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){if(!(yield(0,_core.isWalletUnlocked)()))throw new Error('wallet is locked');return(0,_cache.handleCachedValue)({target:'TEMP',getIdentifier:function(){var _getIdentifier=(0,_asyncToGenerator2.default)(function*(){var chainId=yield _constants.PortkeyConfig.currChainId();return NETWORK_TOKEN_IDENTIFIER+"-"+chainId;});function getIdentifier(){return _getIdentifier.apply(this,arguments);}return getIdentifier;}(),valueExpireStrategy:function(){var _valueExpireStrategy=(0,_asyncToGenerator2.default)(function*(){var chainId=_constants.PortkeyConfig.currChainId();var expireTime=yield _storage.TempStorage.getString(EXPIRE_TIME_IDENTIFIER+"-"+chainId);return expireTime?parseInt(expireTime,10)<Date.now():false;});function valueExpireStrategy(){return _valueExpireStrategy.apply(this,arguments);}return valueExpireStrategy;}(),getValueIfNonExist:function(){var _getValueIfNonExist=(0,_asyncToGenerator2.default)(function*(){var _yield$getUnlockedWal=yield(0,_wallet.getUnlockedWallet)(),address=_yield$getUnlockedWal.address,privateKey=_yield$getUnlockedWal.privateKey,caHash=_yield$getUnlockedWal.caInfo.caHash;var wallet=_wallet2.AElfWeb3SDK.getWalletByPrivateKey(privateKey);var timestamp=Date.now();var message=Buffer.from(address+"-"+timestamp).toString('hex');var signature=_wallet2.AElfWeb3SDK.sign(message,wallet.keyPair).toString('hex');var _yield$NetworkControl=yield _controller.NetworkController.refreshNetworkToken({pubkey:wallet.keyPair.getPublic('hex'),timestamp:""+timestamp,ca_hash:caHash,chain_id:yield _constants.PortkeyConfig.currChainId(),signature:signature}),access_token=_yield$NetworkControl.access_token,expires_in=_yield$NetworkControl.expires_in;_storage.TempStorage.set(EXPIRE_TIME_IDENTIFIER+"-"+(yield _constants.PortkeyConfig.currChainId()),""+(Date.now()+expires_in*1000));return access_token;});function getValueIfNonExist(){return _getValueIfNonExist.apply(this,arguments);}return getValueIfNonExist;}()});});return function getCachedNetworkToken(){return _ref.apply(this,arguments);};}();