var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useCheckUpdate=useCheckUpdate;exports.useGetDeviceInfo=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _react=require("react");var _device=require("../packages/types/types-ca/device");var _common=require("../constants/common");var _useLockCallback=_interopRequireDefault(require("../packages/hooks/useLockCallback"));var Application=_interopRequireWildcard(require("expo-application"));var _apiDid=require("../packages/api/api-did");var _reactNative=require("react-native");var _OverlayModal=_interopRequireDefault(require("../components/OverlayModal"));var _ActionSheet=_interopRequireDefault(require("../components/ActionSheet"));var _device2=require("../packages/utils/device");var Device=_interopRequireWildcard(require("expo-device"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var useGetDeviceInfo=exports.useGetDeviceInfo=function useGetDeviceInfo(){return(0,_react.useCallback)(function(){return{deviceType:_common.DEVICE_TYPE,deviceName:Device.deviceName||''};},[]);};function useCheckUpdate(){return(0,_useLockCallback.default)((0,_asyncToGenerator2.default)(function*(){try{var currentVersion=Application.nativeApplicationVersion;var req=yield _apiDid.request.wallet.pullNotify({method:'POST',params:{deviceId:'deviceId',deviceType:_reactNative.Platform.OS==='android'?_device.VersionDeviceType.Android:_device.VersionDeviceType.iOS,appVersion:currentVersion,appId:'10001'}});if(req.targetVersion&&currentVersion){if((0,_device2.compareVersions)(currentVersion,req.targetVersion)===-1){var buttons=[{title:'Update',onPress:function onPress(){return _reactNative.Linking.openURL(req.downloadUrl);}}];if(!req.isForceUpdate)buttons.push({type:'outline',title:'Cancel',onPress:_OverlayModal.default.hide});_OverlayModal.default.destroy();_ActionSheet.default.alert({title:req.title,message:req.content,buttons:buttons,autoClose:false});}}}catch(error){console.log(error,'=====error');}}),[]);}