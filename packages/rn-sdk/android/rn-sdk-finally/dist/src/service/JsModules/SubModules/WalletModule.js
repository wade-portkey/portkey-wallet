var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.emitJSMethodResult=exports.WalletModule=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _nativeModules=require("../../native-modules");var _handler=require("../../../model/contract/handler");var _core=require("../../../model/verify/core");var _wallet=require("../../../model/wallet");var WalletModule=exports.WalletModule={callCaContractMethod:function(){var _callCaContractMethod=(0,_asyncToGenerator2.default)(function*(props){var eventId=props.eventId,methodName=props.contractMethodName,params=props.params,isViewMethod=props.isViewMethod;console.log('callContractMethod called ','eventId: ',eventId,'methodName: ',methodName,'params: ',params);if(!(yield(0,_core.isWalletUnlocked)())){return emitJSMethodResult(eventId,{status:'fail',error:'wallet is not unlocked'});}var contract=yield(0,_handler.getContractInstance)();var _yield$getUnlockedWal=yield(0,_wallet.getUnlockedWallet)(),address=_yield$getUnlockedWal.address;var isParamsEmpty=Object.values(params!=null?params:{}).length===0;try{var result=isViewMethod?yield contract.callSendMethod(methodName,address,isParamsEmpty?null:params):yield contract.callViewMethod(methodName,isParamsEmpty?null:params);if(!result)throw new Error('result is null');var data=result.data,error=result.error;var jsData={status:!error?'success':'fail',data:data,error:error};if(result.transactionId){jsData=Object.assign({},jsData,{transactionId:result.transactionId});}emitJSMethodResult(eventId,jsData);}catch(e){emitJSMethodResult(eventId,{status:'fail',error:e});}});function callCaContractMethod(_x){return _callCaContractMethod.apply(this,arguments);}return callCaContractMethod;}(),getWalletDetails:function(){var _getWalletDetails=(0,_asyncToGenerator2.default)(function*(props){var eventId=props.eventId;console.log('getWalletDetails called ','eventId: ',eventId);if(!(yield(0,_core.isWalletUnlocked)())){return emitJSMethodResult(eventId,{status:'fail',error:'wallet is not unlocked!'});}var wallet=yield(0,_wallet.getUnlockedWallet)();return emitJSMethodResult(eventId,{status:'success',data:wallet});});function getWalletDetails(_x2){return _getWalletDetails.apply(this,arguments);}return getWalletDetails;}(),lockWallet:function(){var _lockWallet2=(0,_asyncToGenerator2.default)(function*(props){var eventId=props.eventId;console.log('lockWallet called ','eventId: ',eventId);if(!(yield(0,_core.isWalletUnlocked)())){return emitJSMethodResult(eventId,{status:'fail',error:'wallet is not unlocked! You have to unlock wallet before trying to lock.'});}yield(0,_core.lockWallet)();return emitJSMethodResult(eventId,{status:'success',data:{succeed:true}});});function lockWallet(_x3){return _lockWallet2.apply(this,arguments);}return lockWallet;}(),exitWallet:function(){var _exitWallet2=(0,_asyncToGenerator2.default)(function*(props){var eventId=props.eventId;console.log('exitWallet called ','eventId: ',eventId);if(!(yield(0,_core.isWalletUnlocked)())){return emitJSMethodResult(eventId,{status:'fail',error:'wallet is not unlocked or created! You have to unlock wallet before trying to exit.'});}try{var res=yield(0,_handler.callRemoveManagerMethod)();if(!res.error){(0,_core.exitWallet)();}else{throw res.error;}return emitJSMethodResult(eventId,{status:!res.error?'success':'fail',data:{result:res.data}});}catch(e){console.log('error when callRemoveManagerMethod',e);return emitJSMethodResult(eventId,{status:'fail',error:e});}});function exitWallet(_x4){return _exitWallet2.apply(this,arguments);}return exitWallet;}()};var emitJSMethodResult=exports.emitJSMethodResult=function emitJSMethodResult(eventId,result){_nativeModules.PortkeyModulesEntity.NativeWrapperModule.onWarning('emitJSMethodResult',"emitJSMethodResult called, eventId: "+eventId+", result: "+JSON.stringify(result));_nativeModules.PortkeyModulesEntity.NativeWrapperModule.emitJSMethodResult(eventId,JSON.stringify(result));};