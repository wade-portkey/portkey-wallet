var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useNextChannelList=exports.useCreateP2pChannel=exports.useChannelList=exports.useChannelItemInfo=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _im=_interopRequireWildcard(require("../../../im"));var _react=require("react");var _im2=require("../../../constants/constants-ca/im");var _network=require("../network");var _=require("../..");var _actions=require("packages/types/store-ca/im/actions");var _index=require("./index");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var useNextChannelList=exports.useNextChannelList=function useNextChannelList(){var channelListNetMap=(0,_index.useIMChannelListNetMapState)();var hasNextNetMap=(0,_index.useIMHasNextNetMapState)();var _useCurrentNetworkInf=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf.networkType;var dispatch=(0,_.useAppCommonDispatch)();var channelList=(0,_react.useMemo)(function(){return channelListNetMap==null?void 0:channelListNetMap[networkType];},[channelListNetMap,networkType]);var hasNext=(0,_react.useMemo)(function(){return(hasNextNetMap==null?void 0:hasNextNetMap[networkType])!==undefined?hasNextNetMap[networkType]:false;},[hasNextNetMap,networkType]);var isLoadingRef=(0,_react.useRef)(false);var next=(0,_react.useCallback)((0,_asyncToGenerator2.default)(function*(){var isInit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(isLoadingRef.current)return;isLoadingRef.current=true;var lastCursor=isInit?'':(channelList==null?void 0:channelList.cursor)||'';try{var _result$data,_result$data2;var result=yield _im.default.service.getChannelList({cursor:lastCursor,maxResultCount:_im2.CHANNEL_LIST_LIMIT});var list=((_result$data=result.data)==null?void 0:_result$data.list)||[];var cursor=((_result$data2=result.data)==null?void 0:_result$data2.cursor)||lastCursor;var hasNextValue=list.length>=_im2.CHANNEL_LIST_LIMIT;dispatch((0,_actions.setHasNext)({network:networkType,hasNext:hasNextValue}));if(isInit){dispatch((0,_actions.setChannelList)({network:networkType,channelList:{list:list,cursor:cursor}}));}else{dispatch((0,_actions.nextChannelList)({network:networkType,channelList:{list:list,cursor:cursor}}));}}catch(error){console.log('next: error',error);throw error;}finally{isLoadingRef.current=false;}}),[channelList==null?void 0:channelList.cursor,dispatch,networkType]);return{next:next,hasNext:hasNext};};var useChannelList=exports.useChannelList=function useChannelList(){var channelListNetMap=(0,_index.useIMChannelListNetMapState)();var _useCurrentNetworkInf2=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf2.networkType;var _useNextChannelList=useNextChannelList(),next=_useNextChannelList.next,hasNext=_useNextChannelList.hasNext;var rawList=(0,_react.useMemo)(function(){var _channelListNetMap$ne;return(channelListNetMap==null?void 0:(_channelListNetMap$ne=channelListNetMap[networkType])==null?void 0:_channelListNetMap$ne.list)||[];},[channelListNetMap,networkType]);var list=(0,_react.useMemo)(function(){return rawList.filter(function(item){return!!item.lastPostAt;});},[rawList]);var init=(0,_react.useCallback)(function(){return next(true);},[next]);return{rawList:rawList,list:list,init:init,next:next,hasNext:hasNext};};var useChannelItemInfo=exports.useChannelItemInfo=function useChannelItemInfo(channelId){var _useChannelList=useChannelList(),rawList=_useChannelList.rawList;return(0,_react.useMemo)(function(){return rawList.find(function(item){return item.channelUuid===channelId;});},[channelId,rawList]);};var useCreateP2pChannel=exports.useCreateP2pChannel=function useCreateP2pChannel(){var _useCurrentNetworkInf3=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf3.networkType;var _useChannelList2=useChannelList(),rawList=_useChannelList2.rawList;var dispatch=(0,_.useAppCommonDispatch)();var createChannel=(0,_react.useCallback)(function(){var _ref2=(0,_asyncToGenerator2.default)(function*(relationId){var channel=rawList.find(function(item){return item.toRelationId===relationId;});if(channel)return channel;var result=yield _im.default.service.createChannel({name:'',type:_im.ChannelTypeEnum.P2P,members:[relationId]});var channelUuid=result.data.channelUuid;channel={status:_im.ChannelStatusEnum.NORMAL,channelUuid:channelUuid,displayName:'',channelIcon:'',channelType:_im.ChannelTypeEnum.P2P,unreadMessageCount:0,mentionsCount:0,lastMessageType:null,lastMessageContent:null,lastPostAt:null,mute:false,pin:false,toRelationId:relationId};dispatch((0,_actions.addChannel)({network:networkType,channel:channel}));(0,_asyncToGenerator2.default)(function*(){try{var _channelInfo$members$;var _yield$im$service$get=yield _im.default.service.getChannelInfo({channelUuid:channelUuid}),channelInfo=_yield$im$service$get.data;console.log('createChannel channelInfo: ',channelInfo);dispatch((0,_actions.updateChannelAttribute)({network:networkType,channelId:channelUuid,value:{displayName:((_channelInfo$members$=channelInfo.members.find(function(item){return item.relationId===relationId;}))==null?void 0:_channelInfo$members$.name)||'',channelIcon:channelInfo.icon,mute:channelInfo.mute,pin:channelInfo.pin}}));}catch(error){console.log('createChannel error: ',error);}})();return channel;});return function(_x){return _ref2.apply(this,arguments);};}(),[dispatch,networkType,rawList]);return createChannel;};