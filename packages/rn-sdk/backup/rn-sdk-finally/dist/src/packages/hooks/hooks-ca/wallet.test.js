var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _react=require("@testing-library/react");var _apiDid=require("../../api/api-did");var _network=require("./network");var _wallet=require("./wallet");var _setup=require("test/utils/setup");var _render=require("test/utils/render");var _apollo=require("../../graphql/contract/apollo");var _device=require("../../utils/device");var _caHolderManagerInfo=require("../../graphql/contract/__generated__/hooks/caHolderManagerInfo");var _network2=require("../../constants/constants-ca/network");var _networkState=require("test/data/networkState");jest.mock("./network");jest.mock("../../api/api-did");jest.mock("../../graphql/contract/apollo");jest.mock("../../graphql/contract/__generated__/hooks/caHolderManagerInfo");jest.mock("../../utils/device");var COMPLETE_WALLET_STATE={wallet:{chainInfo:{TESTNET:[{caContractAddress:'2w13D...iw4ZF',chainId:'AELF',chainName:'AELF',endPoint:'https://localhost',explorerUrl:'https://localhost',id:'AELF',lastModifyTime:'2023-02-25T07:15:23.6079047Z'},{caContractAddress:'2TtDQ...WppP',chainId:'tDVW',chainName:'tDVW',endPoint:'https://localhost',explorerUrl:'https://localhost',id:'tDVW',lastModifyTime:'2023-02-25T07:18:48.0341696Z'}]},chainList:[],currentNetwork:'TESTNET',walletAvatar:'master6',walletInfo:{AESEncryptMnemonic:'U6Fs...zHss',AESEncryptPrivateKey:'U6Fs...OxA',BIP44Path:"m/44'/1616'/0'/0/0",address:'2ZpT...3Udb',caInfo:{TESTNET:{AELF:{caAddress:'hpB...NoVE',caHash:'2cd...ec7'},managerInfo:{loginAccount:'aurora@portkey.finance',managerUniqueId:'f60...66b5',requestId:'965...c0be',type:0,verificationType:1},tDVW:{caAddress:'c8W...Nkg6',caHash:'2cd...ec7'}},MAIN:undefined},publicKey:{x:'abc...bca',y:'abc...bca'}},walletName:'Wallet k',walletType:'aelf',_persist:{version:-1,rehydrated:true},originChainId:'AELF'}};var INCOMPLETE_WALLET_STATE={wallet:{currentNetwork:'MAIN',walletInfo:{caInfo:{TESTNET:undefined,MAIN:undefined}}}};var NO_WALLET_INFO_STATE={wallet:{currentNetwork:'MAIN',walletInfo:undefined}};var EXTRA_DATA_LIST=[{transactionTime:1681891953548,deviceInfo:{deviceName:'Other',deviceType:0},version:'2.0.0'}];describe('useCurrentWalletInfo',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid=(0,_render.renderHookWithProvider)(_wallet.useCurrentWalletInfo,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid.result;expect(result.current).toHaveProperty('caHash','2cd...ec7');});test('no caInfo.[currentNetwork] data, and return caHash:undefined',function(){var _renderHookWithProvid2=(0,_render.renderHookWithProvider)(_wallet.useCurrentWalletInfo,(0,_setup.setupStore)(INCOMPLETE_WALLET_STATE)),result=_renderHookWithProvid2.result;expect(result.current).toHaveProperty('caHash',undefined);});});describe('useCurrentWallet',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid3=(0,_render.renderHookWithProvider)(_wallet.useCurrentWallet,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid3.result;expect(result.current.chainList).toHaveLength(2);});});describe('useDeviceList',function(){var CA_HOLDER_MANAGER_INFO_DATA;beforeEach(function(){CA_HOLDER_MANAGER_INFO_DATA={caHolderManagerInfo:[{__typename:'CAHolderManagerDto',id:'AELF-e6ausH...5FMEXt',chainId:'AELF',caHash:'a0a96f...7b67fa',caAddress:'e6a...MEXt',managerInfos:[{__typename:'ManagerInfo',address:'2n9...fS2e',extraData:'{"transactionTime":1681891953548,"deviceInfo":"WjW...zxg","version":"2.0.0"}'}],originChainId:'AELF'}]};});test('useCaHolderManagerInfoQuery.data is undefined, and return deviceAmount is 0',function(){jest.mocked(_network.useCurrentNetworkInfo).mockReturnValue(_networkState.TestnetNetworkInfo);jest.mocked(_caHolderManagerInfo.useCaHolderManagerInfoQuery).mockReturnValue({data:undefined,error:undefined,refetch:jest.fn(),loading:true});var _renderHookWithProvid4=(0,_render.renderHookWithProvider)(_wallet.useDeviceList,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid4.result;expect(result.current.deviceList).toHaveLength(0);expect(result.current.loading).toBe(true);});test('complete wallet data, and return deviceAmount is 1',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_network.useCurrentNetworkInfo).mockReturnValue(_networkState.TestnetNetworkInfo);jest.mocked(_caHolderManagerInfo.useCaHolderManagerInfoQuery).mockReturnValue({data:CA_HOLDER_MANAGER_INFO_DATA,error:undefined,refetch:jest.fn(),loading:false});jest.mocked(_device.extraDataListDecode).mockResolvedValue(EXTRA_DATA_LIST);jest.mocked(_apollo.getApolloClient).mockReturnValue({});var res=yield(0,_react.act)((0,_asyncToGenerator2.default)(function*(){return(0,_render.renderHookWithProvider)(_wallet.useDeviceList,(0,_setup.setupStore)(COMPLETE_WALLET_STATE));}));expect(res.result.current.deviceList).toHaveLength(1);expect(res.result.current.deviceAmount).toBe(1);expect(res.result.current.loading).toBe(false);}));test('managerInfos is undefined, and return deviceAmount is 0',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_network.useCurrentNetworkInfo).mockReturnValue(_networkState.TestnetNetworkInfo);var caHolderManagerInfoData={caHolderManagerInfo:[Object.assign({},CA_HOLDER_MANAGER_INFO_DATA.caHolderManagerInfo[0],{managerInfos:undefined})]};jest.mocked(_caHolderManagerInfo.useCaHolderManagerInfoQuery).mockReturnValue({data:caHolderManagerInfoData,error:undefined,refetch:jest.fn(),loading:false});jest.mocked(_device.extraDataListDecode).mockResolvedValue(EXTRA_DATA_LIST);jest.mocked(_apollo.getApolloClient).mockReturnValue({});var res=yield(0,_react.act)((0,_asyncToGenerator2.default)(function*(){return(0,_render.renderHookWithProvider)(_wallet.useDeviceList,(0,_setup.setupStore)(COMPLETE_WALLET_STATE));}));expect(res.result.current.deviceList).toHaveLength(0);expect(res.result.current.deviceAmount).toBe(0);expect(res.result.current.loading).toBe(false);}));test('complete wallet data, and return deviceAmount is 1',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_network.useCurrentNetworkInfo).mockReturnValue(_networkState.TestnetNetworkInfo);var caHolderManagerInfoData={caHolderManagerInfo:[Object.assign({},CA_HOLDER_MANAGER_INFO_DATA.caHolderManagerInfo[0],{managerInfos:[{__typename:'ManagerInfo',address:'2n9...fS2e'}]})]};jest.mocked(_caHolderManagerInfo.useCaHolderManagerInfoQuery).mockReturnValue({data:caHolderManagerInfoData,error:undefined,refetch:jest.fn(),loading:false});jest.mocked(_device.extraDataListDecode).mockResolvedValue(EXTRA_DATA_LIST);jest.mocked(_apollo.getApolloClient).mockReturnValue({});var res=yield(0,_react.act)((0,_asyncToGenerator2.default)(function*(){return(0,_render.renderHookWithProvider)(_wallet.useDeviceList,(0,_setup.setupStore)(COMPLETE_WALLET_STATE));}));expect(res.result.current.deviceList).toHaveLength(1);expect(res.result.current.deviceAmount).toBe(1);expect(res.result.current.loading).toBe(false);}));});describe('useCaAddressInfoList',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid5=(0,_render.renderHookWithProvider)(_wallet.useCaAddressInfoList,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid5.result;expect(result.current).toHaveLength(2);expect(result.current[0].caAddress).toBe(COMPLETE_WALLET_STATE.wallet.walletInfo.caInfo.TESTNET.AELF.caAddress);});test('no caInfo.[currentNetwork] data, and return []',function(){var _renderHookWithProvid6=(0,_render.renderHookWithProvider)(_wallet.useCaAddressInfoList,(0,_setup.setupStore)(INCOMPLETE_WALLET_STATE)),result=_renderHookWithProvid6.result;expect(result.current).toHaveLength(0);});});describe('useSetWalletName',function(){test('the useSetWalletName method was successfully called',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_network.useCurrentNetworkInfo).mockReturnValue(_networkState.TestnetNetworkInfo);jest.mocked(_apiDid.request.wallet.editWalletName).mockReturnValue(Promise.resolve(function(){return jest.fn();}));var _renderHookWithProvid7=(0,_render.renderHookWithProvider)(_wallet.useSetWalletName,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid7.result;expect(result.current).toBeDefined();yield result.current('newName');expect(result.current).toHaveBeenCalled;}));});describe('useCaAddresses',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid8=(0,_render.renderHookWithProvider)(_wallet.useCaAddresses,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid8.result;expect(result.current).toHaveLength(2);});test('no caInfo, and return empty array',function(){var _renderHookWithProvid9=(0,_render.renderHookWithProvider)(_wallet.useCaAddresses,(0,_setup.setupStore)(INCOMPLETE_WALLET_STATE)),result=_renderHookWithProvid9.result;expect(result.current).toHaveLength(0);});});describe('useChainIdList',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid10=(0,_render.renderHookWithProvider)(_wallet.useChainIdList,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid10.result;expect(result.current).toHaveLength(2);});test('no caInfo, and return empty array',function(){var _renderHookWithProvid11=(0,_render.renderHookWithProvider)(_wallet.useChainIdList,(0,_setup.setupStore)(INCOMPLETE_WALLET_STATE)),result=_renderHookWithProvid11.result;expect(result.current).toHaveLength(0);});});describe('useCaInfo',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid12=(0,_render.renderHookWithProvider)(_wallet.useCaInfo,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid12.result;expect(result.current).toBe(COMPLETE_WALLET_STATE.wallet.chainInfo);});test('no chainInfo data, and return undefined',function(){var _renderHookWithProvid13=(0,_render.renderHookWithProvider)(_wallet.useCaInfo,(0,_setup.setupStore)(INCOMPLETE_WALLET_STATE)),result=_renderHookWithProvid13.result;expect(result.current).toBeUndefined();});});describe('useOriginChainId',function(){test('complete wallet data, and return successfully',function(){var _renderHookWithProvid14=(0,_render.renderHookWithProvider)(_wallet.useOriginChainId,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid14.result;expect(result.current).toBe(COMPLETE_WALLET_STATE.wallet.originChainId);});test('no wallet.originChainId data, and return undefined',function(){var _renderHookWithProvid15=(0,_render.renderHookWithProvider)(_wallet.useOriginChainId,(0,_setup.setupStore)(INCOMPLETE_WALLET_STATE)),result=_renderHookWithProvid15.result;expect(result.current).toBe(_network2.DefaultChainId);});});describe('useOtherNetworkLogged',function(){test('complete wallet data, and return true',function(){var _renderHookWithProvid16=(0,_render.renderHookWithProvider)(_wallet.useOtherNetworkLogged,(0,_setup.setupStore)(COMPLETE_WALLET_STATE)),result=_renderHookWithProvid16.result;expect(result.current).toBe(true);});test('no walletInfo data, and return false',function(){var _renderHookWithProvid17=(0,_render.renderHookWithProvider)(_wallet.useOtherNetworkLogged,(0,_setup.setupStore)(NO_WALLET_INFO_STATE)),result=_renderHookWithProvid17.result;expect(result.current).toBe(false);});});