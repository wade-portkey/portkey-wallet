var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useMisc=exports.useIsScanQRCode=void 0;exports.usePhoneCountryCode=usePhoneCountryCode;exports.useSetLocalPhoneCountryCode=useSetLocalPhoneCountryCode;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _index=require("./index");var _actions=require("packages/types/store-ca/misc/actions");var _react=require("react");var _network=require("./network");var _=require("./..");var _country=require("../../constants/constants-ca/country");var _socketDid=_interopRequireDefault(require("../../socket/socket-did"));var _apiDid=require("../../api/api-did");var useMisc=exports.useMisc=function useMisc(){return(0,_index.useAppCASelector)(function(state){return state.misc;});};function useSetLocalPhoneCountryCode(){var dispatch=(0,_.useAppCommonDispatch)();var setLocalPhoneCountryCode=(0,_react.useCallback)(function(countryItem){dispatch((0,_actions.setLocalPhoneCountryCodeAction)(countryItem));},[dispatch]);return setLocalPhoneCountryCode;}function usePhoneCountryCode(){var isInit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var dispatch=(0,_.useAppCommonDispatch)();var _useMisc=useMisc(),phoneCountryCodeListChainMap=_useMisc.phoneCountryCodeListChainMap,defaultPhoneCountryCode=_useMisc.defaultPhoneCountryCode,storeLocalPhoneCountryCode=_useMisc.localPhoneCountryCode;var _useCurrentNetworkInf=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf.networkType;var networkList=(0,_network.useNetworkList)();var phoneCountryCodeList=(0,_react.useMemo)(function(){return(phoneCountryCodeListChainMap==null?void 0:phoneCountryCodeListChainMap[networkType])||[];},[networkType,phoneCountryCodeListChainMap]);var phoneCountryCodeIndex=(0,_react.useMemo)(function(){return(0,_country.getCountryCodeIndex)(phoneCountryCodeList);},[phoneCountryCodeList]);var localPhoneCountryCode=(0,_react.useMemo)(function(){return storeLocalPhoneCountryCode||defaultPhoneCountryCode||_country.DefaultCountry;},[defaultPhoneCountryCode,storeLocalPhoneCountryCode]);(0,_react.useEffect)(function(){if(isInit){networkList.forEach(function(item){var phoneCountryCodeIndexChainMapItem=(phoneCountryCodeListChainMap==null?void 0:phoneCountryCodeListChainMap[item.networkType])||[];if(phoneCountryCodeIndexChainMapItem.length===0){dispatch((0,_actions.getPhoneCountryCode)(item.networkType));}});}},[]);(0,_react.useEffect)(function(){if(!isInit){dispatch((0,_actions.getPhoneCountryCode)(networkType));}},[dispatch,isInit,networkType]);var setLocalPhoneCountryCode=useSetLocalPhoneCountryCode();return{phoneCountryCodeList:phoneCountryCodeList,phoneCountryCodeIndex:phoneCountryCodeIndex,localPhoneCountryCode:localPhoneCountryCode,setLocalPhoneCountryCode:setLocalPhoneCountryCode};}var useIsScanQRCode=exports.useIsScanQRCode=function useIsScanQRCode(clientId){var _useState=(0,_react.useState)(false),_useState2=(0,_slicedToArray2.default)(_useState,2),isScanQRCode=_useState2[0],setIsScanQRCode=_useState2[1];var signalrDidRemoveRef=(0,_react.useRef)();var isActiveRef=(0,_react.useRef)(true);(0,_react.useEffect)(function(){isActiveRef.current=true;return function(){isActiveRef.current=false;};},[]);var cleanSignalr=(0,_react.useCallback)(function(){try{signalrDidRemoveRef.current==null?void 0:signalrDidRemoveRef.current();signalrDidRemoveRef.current=undefined;_socketDid.default.stop();_socketDid.default.signalr=null;}catch(error){console.log(error);}},[]);var cleanSignalrRef=(0,_react.useRef)(cleanSignalr);var registerSignalr=(0,_react.useCallback)(function(){var _ref=(0,_asyncToGenerator2.default)(function*(clientId){try{var _signalrDid$onScanLog=_socketDid.default.onScanLogin(function(){setIsScanQRCode(true);cleanSignalrRef.current();}),remove=_signalrDid$onScanLog.remove;signalrDidRemoveRef.current=remove;yield _socketDid.default.doOpen({url:_apiDid.request.defaultConfig.baseURL+"/ca",clientId:clientId});if(!isActiveRef.current){throw new Error('isActiveRef.current is false');}}catch(error){console.log('registerSignalr: error',error);}});return function(_x){return _ref.apply(this,arguments);};}(),[]);var registerSignalrRef=(0,_react.useRef)(registerSignalr);(0,_react.useEffect)(function(){if(!clientId)return;registerSignalrRef.current(clientId);return cleanSignalrRef.current;},[clientId]);return isScanQRCode;};