var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.testRunner=exports.addTestCases=exports.TestModule=exports.TestCases=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _network=require("../../../tests/network");var _WalletModule=require("./WalletModule");var TestCases=exports.TestCases=[];var addTestCases=exports.addTestCases=function addTestCases(testCase){if(Array.isArray(testCase)){TestCases.push.apply(TestCases,(0,_toConsumableArray2.default)(testCase));}else{TestCases.push(testCase);}};if(__DEV__){addTestCases(_network.NetworkTestCases);}var testRunner=exports.testRunner=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){var testReport={testAmount:0,testsAccepted:0,testsFailed:0,details:[]};var testServices=TestCases;console.log('testServices amount : ',testServices.length);for(var testService of testServices){var testContext={log:function log(msg,tag){testReport.details[testReport.details.length-1].logs.push({level:'log',msg:msg,tag:tag});},warn:function warn(msg){testReport.details[testReport.details.length-1].logs.push({level:'warn',msg:msg});},error:function error(msg,_error){testReport.details[testReport.details.length-1].logs.push({level:'error',msg:msg});if(_error){testReport.details[testReport.details.length-1].logs.push({level:'error',msg:_error});}},assert:function assert(condition,msg){if(!condition){testReport.details[testReport.details.length-1].logs.push({level:'error',msg:msg});throw new Error(msg);}}};testReport.details.push({describe:testService.describe,logs:[],status:'success'});try{yield testService.run(testContext);testReport.testsAccepted+=1;}catch(e){testReport.testsFailed+=1;testReport.details[testReport.details.length-1].status='fail';}testReport.testAmount+=1;if(!testService.useDetailsReport&&testReport.details[testReport.details.length-1].status!=='fail'){testReport.details.pop();}}return testReport;});return function testRunner(){return _ref.apply(this,arguments);};}();var TestModule=exports.TestModule={runTestCases:function(){var _runTestCases=(0,_asyncToGenerator2.default)(function*(props){var eventId=props.eventId;console.log('runTestCases called ','eventId: ',eventId);var testReport=yield testRunner();console.log('testReport : ',JSON.stringify(testReport));return(0,_WalletModule.emitJSMethodResult)(eventId,{status:testReport.testAmount===testReport.testsAccepted?'success':'fail',data:testReport});});function runTestCases(_x){return _runTestCases.apply(this,arguments);}return runTestCases;}()};