Object.defineProperty(exports,"__esModule",{value:true});exports.dappSlice=void 0;var _toolkit=require("@reduxjs/toolkit");var _actions=require("./actions");var initialState={dappMap:{}};var dappSlice=exports.dappSlice=(0,_toolkit.createSlice)({name:'dapp',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(_actions.addDapp,function(state,action){var _action$payload=action.payload,networkType=_action$payload.networkType,dapp=_action$payload.dapp;var dappList=state.dappMap[networkType];if(!dappList)dappList=[];if(dappList.some(function(item){return item.origin===dapp.origin;}))throw Error('dapp already exists');dappList.push(Object.assign({},dapp,{connectedTime:Date.now()}));state.dappMap[networkType]=dappList;}).addCase(_actions.removeDapp,function(state,action){var _action$payload2=action.payload,networkType=_action$payload2.networkType,origin=_action$payload2.origin;var dappList=state.dappMap[networkType];if(!dappList||!dappList.some(function(item){return item.origin===origin;}))throw Error('origin does not exist');state.dappMap[networkType]=dappList.filter(function(item){return item.origin!==origin;});}).addCase(_actions.updateDapp,function(state,action){var _action$payload3=action.payload,networkType=_action$payload3.networkType,dapp=_action$payload3.dapp,origin=_action$payload3.origin;var dappList=state.dappMap[networkType];if(!dappList||!dappList.some(function(item){return item.origin===origin;}))throw Error('origin does not exist');state.dappMap[networkType]=dappList.map(function(item){if(item.origin===origin)return Object.assign({},item,dapp);return item;});}).addCase(_actions.updateSessionInfo,function(state,action){var _action$payload4=action.payload,networkType=_action$payload4.networkType,origin=_action$payload4.origin,sessionInfo=_action$payload4.sessionInfo;var dappList=state.dappMap[networkType];if(!dappList||!dappList.some(function(item){return item.origin===origin;}))throw Error('origin does not exist');state.dappMap[networkType]=dappList.map(function(item){if(item.origin===origin)return Object.assign({},item,{sessionInfo:sessionInfo});return item;});}).addCase(_actions.resetDappList,function(state,action){state.dappMap[action.payload]=[];}).addCase(_actions.resetDapp,function(state){state.dappMap={};});}});