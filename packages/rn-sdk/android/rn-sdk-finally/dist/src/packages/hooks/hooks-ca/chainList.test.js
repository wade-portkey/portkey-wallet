var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _chainList=require("./chainList");var _react=require("@testing-library/react");var _=require("./..");var _actions=require("packages/types/store-ca/wallet/actions");var _wallet=require("./wallet");var _chainInfo=require("test/data/chainInfo");jest.mock('packages/types/store-ca/wallet/actions',function(){return{getChainListAsync:jest.fn((0,_asyncToGenerator2.default)(function*(){return{payload:[[{chainId:'AELF'},{chainId:'tDVV'}],{chainId:'AELF'}]};}))};});jest.mock("./wallet");jest.mock("../index");jest.mocked(_.useAppCommonDispatch).mockReturnValue(function(){var _ref2=(0,_asyncToGenerator2.default)(function*(call){return call;});return function(_x){return _ref2.apply(this,arguments);};}());describe('useChainListFetch',function(){test('check normal flow',function(){jest.mocked(_wallet.useWallet).mockReturnValue({currentNetwork:'TESTNET',walletAvatar:'',walletType:'aelf',walletName:'',chainList:[]});(0,_react.renderHook)(function(){return(0,_chainList.useChainListFetch)();});expect(_actions.getChainListAsync).toHaveBeenCalled();});});describe('useCurrentChainList',function(){test('no chainInfo.TESTNET, and return undefined',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook=(0,_react.renderHook)(function(){return(0,_chainList.useCurrentChainList)();}),result=_renderHook.result;expect(result.current).toBeUndefined();});test('have chainInfo.MAIN, and return []',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook2=(0,_react.renderHook)(function(){return(0,_chainList.useCurrentChainList)();}),result=_renderHook2.result;expect(result.current).toHaveLength(1);});});describe('useCurrentChain',function(){test('chainInfo have AELF info, and return AELF',function(){var _result$current;jest.mocked(_wallet.useOriginChainId).mockReturnValue('AELF');var _renderHook3=(0,_react.renderHook)(function(){return(0,_chainList.useCurrentChain)('AELF');}),result=_renderHook3.result;expect((_result$current=result.current)==null?void 0:_result$current.chainId).toBe('AELF');});test('chainInfo not have tDVV info, and return undefined',function(){jest.mocked(_wallet.useOriginChainId).mockReturnValue('tDVV');jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook4=(0,_react.renderHook)(function(){return(0,_chainList.useCurrentChain)();}),result=_renderHook4.result;expect(result.current).toBeUndefined();});});describe('useDefaultToken',function(){test('chainInfo have AELF info, and return AELF',function(){var _result$current2;jest.mocked(_wallet.useOriginChainId).mockReturnValue('AELF');var _renderHook5=(0,_react.renderHook)(function(){return(0,_chainList.useDefaultToken)('AELF');}),result=_renderHook5.result;expect((_result$current2=result.current)==null?void 0:_result$current2.decimals).toBe('8');});});describe('useIsValidSuffix',function(){test('in TESTNET, chainInfo do not have AELF info, cant get suffix',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook6=(0,_react.renderHook)(function(){return(0,_chainList.useIsValidSuffix)();}),result=_renderHook6.result;var res=result.current('AELF');expect(res).toBeFalsy();});test('in MAIN, chainInfo have AELF info, can get suffix',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook7=(0,_react.renderHook)(function(){return(0,_chainList.useIsValidSuffix)();}),result=_renderHook7.result;var res=result.current('AELF');expect(res).toBeTruthy();});});describe('useGetChainInfo',function(){test('get AELF MAIN ChainInfo, and return successfully',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook8=(0,_react.renderHook)(function(){return(0,_chainList.useGetChainInfo)();}),result=_renderHook8.result;var res=yield result.current('AELF');expect(res).toHaveProperty('chainId','AELF');}));test('get tDVV TESTNET ChainInfo, and return successfully',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook9=(0,_react.renderHook)(function(){return(0,_chainList.useGetChainInfo)();}),result=_renderHook9.result;var res=yield result.current('tDVV');expect(res).toHaveProperty('chainId','tDVV');}));test('get tDVW TESTNET ChainInfo, and return undefined',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook10=(0,_react.renderHook)(function(){return(0,_chainList.useGetChainInfo)();}),result=_renderHook10.result;var res=yield result.current('tDVW');expect(res).toBeUndefined();}));});