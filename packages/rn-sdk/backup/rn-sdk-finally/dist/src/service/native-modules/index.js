var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.nativeFetch=exports.chooseImageAndroid=exports.PortkeyModulesEntity=exports.PortkeyDeviceEventEmitter=exports.NetworkResult=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _reactNative=require("react-native");var PortkeyModulesEntity=exports.PortkeyModulesEntity=_reactNative.NativeModules;var nativeFetch=exports.nativeFetch=function(){var _ref=(0,_asyncToGenerator2.default)(function*(url,method,params,headers,extraOptions){var networkModule=PortkeyModulesEntity.NetworkModule;var res=yield networkModule.fetch(url,method,params!=null?params:{},headers!=null?headers:{},extraOptions!=null?extraOptions:{maxWaitingTime:5000});if((res==null?void 0:res.length)>0){try{var t=JSON.parse(res);if(t!=null&&t.result&&typeof t.result==='string'){t.result=JSON.parse(t.result);}return t;}catch(e){}}throw new Error('fetch failed');});return function nativeFetch(_x,_x2,_x3,_x4,_x5){return _ref.apply(this,arguments);};}();var chooseImageAndroid=exports.chooseImageAndroid=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(){if(_reactNative.Platform.OS!=='android'){throw new Error("chooseImageAndroid only supports Android, use Expo's ImagePicker instead on iOS.");}return yield PortkeyModulesEntity.PermissionModule.chooseImage();});return function chooseImageAndroid(){return _ref2.apply(this,arguments);};}();var PortkeyDeviceEventEmitter=exports.PortkeyDeviceEventEmitter=new _reactNative.NativeEventEmitter(PortkeyModulesEntity.NativeWrapperModule);var NetworkResult=exports.NetworkResult=function(NetworkResult){NetworkResult[NetworkResult["success"]=1]="success";NetworkResult[NetworkResult["failed"]=-1]="failed";return NetworkResult;}({});