var _slice=require("./slice");var _actions=require("./actions");var reducer=_slice.guardiansSlice.reducer;var mockUserGuardiansListItem1={guardianAccount:'1@q.com',guardianType:0,isLoginAccount:true,key:'1@q.com&Gauss',identifierHash:'identifierHash1@q.com',salt:'salt',verifier:{id:'Gauss',imageUrl:'https://x/Gauss.png',name:'Gauss'},guardianIdentifier:'1@q.com',isLoginGuardian:true,type:'Email',verifierId:'Gauss',status:undefined};var mockUserGuardiansListItem2={guardianAccount:'2@q.com',guardianType:0,isLoginAccount:true,key:'2@q.com&Gauss',identifierHash:'identifierHash2@q.com',salt:'salt',verifier:{id:'Gauss',imageUrl:'https://x/Gauss.png',name:'Gauss'},guardianIdentifier:'2@q.com',isLoginGuardian:true,type:'Email',verifierId:'Gauss',status:undefined};var mockUserGuardiansListItem3={guardianAccount:'3@q.com',guardianType:0,isLoginAccount:true,key:'3@q.com&Gauss',identifierHash:'identifierHash3@q.com',salt:'salt',verifier:{id:'Gauss',imageUrl:'https://x/Gauss.png',name:'Gauss'},guardianIdentifier:'3@q.com',isLoginGuardian:true,type:'Email',verifierId:'Gauss',status:'verified'};var mockVerifierItem={id:'Gauss',imageUrl:'https://x/Gauss.png',name:'Gauss'};var mockUserGuardianStatus={'1@q.com&Gauss':{guardianAccount:'1@q.com',guardianType:0,isLoginAccount:true,key:'1@q.com&Gauss',identifierHash:'identifierHash',salt:'salt',verifier:{id:'Gauss',imageUrl:'https://x/Gauss.png',name:'Gauss'}},'2@q.com&Minerva':{guardianAccount:'2@q.com',guardianType:0,isLoginAccount:false,key:'2@q.com&Minerva',identifierHash:'identifierHash',salt:'salt',verifier:{id:'Minerva',imageUrl:'https://x/Minerva.png',name:'Minerva'}}};var mockCurrentGuardian=Object.assign({},mockUserGuardiansListItem1);var mockVerifierMap={Gauss:Object.assign({},mockVerifierItem)};var mockGuardianAccounts=[{guardianIdentifier:'1@q.com',identifierHash:'identifierHash1@q.com',isLoginGuardian:true,salt:'salt',type:'Email',verifierId:'Gauss'},{guardianIdentifier:'2@q.com',identifierHash:'identifierHash2@q.com',isLoginGuardian:true,salt:'salt',type:'Email',verifierId:'Gauss'}];describe('resetGuardiansState',function(){test('State will be a empty object',function(){var state=reducer({verifierMap:mockVerifierMap},(0,_actions.resetGuardiansState)());expect(state).toEqual({});});});describe('resetGuardians',function(){test('State only contains the verifierMap property ',function(){var state=reducer({currentGuardian:mockCurrentGuardian,verifierMap:mockVerifierMap},(0,_actions.resetGuardians)());expect(Object.keys(state)).toHaveLength(1);expect(state).toHaveProperty('verifierMap');});});describe('setVerifierListAction',function(){test('Action.payload is null, verifierMap should be an empty object',function(){expect(reducer({verifierMap:mockVerifierMap},(0,_actions.setVerifierListAction)(null))).toMatchObject({verifierMap:{}});});test('Action.payload exist',function(){expect(reducer({verifierMap:{}},(0,_actions.setVerifierListAction)([mockVerifierItem]))).toEqual({verifierMap:{Gauss:mockVerifierItem}});});});describe('setGuardiansAction',function(){test('Action.payload is null, userGuardiansList and userGuardianStatus will be reset',function(){expect(reducer({userGuardiansList:[mockUserGuardiansListItem1],userGuardianStatus:mockUserGuardianStatus},(0,_actions.setGuardiansAction)(null))).toEqual({userGuardiansList:[],userGuardianStatus:{}});});test('Action.payload exist, userGuardianStatus exist',function(){var mockGuardianAccounts=[{guardianIdentifier:'',identifierHash:'1@q.com',isLoginGuardian:true,salt:'salt',type:'Email',verifierId:'Gauss'},{guardianIdentifier:'2@q.com',identifierHash:'identifierHash2@q.com',isLoginGuardian:true,salt:'salt',type:'Email',verifierId:'Gauss'}];var mockUserGuardiansListItem1={guardianAccount:'1@q.com',guardianType:0,isLoginAccount:true,key:'&Gauss',identifierHash:'1@q.com',salt:'salt',verifier:{id:'Gauss',imageUrl:'https://x/Gauss.png',name:'Gauss'},guardianIdentifier:'',isLoginGuardian:true,type:'Email',verifierId:'Gauss'};expect(reducer({verifierMap:mockVerifierMap,userGuardiansList:[],userGuardianStatus:{'3@q.com&Gauss':mockUserGuardiansListItem3}},(0,_actions.setGuardiansAction)({guardianList:{guardians:mockGuardianAccounts},managerInfos:[{address:'address',extraData:'extraData'}]}))).toEqual({verifierMap:mockVerifierMap,userGuardiansList:[mockUserGuardiansListItem1,mockUserGuardiansListItem2],userGuardianStatus:{'&Gauss':mockUserGuardiansListItem1,'2@q.com&Gauss':mockUserGuardiansListItem2,'3@q.com&Gauss':mockUserGuardiansListItem3},guardianExpiredTime:undefined});});test('Action.payload exist, userGuardianStatus does not exist',function(){expect(reducer({verifierMap:mockVerifierMap,userGuardiansList:[]},(0,_actions.setGuardiansAction)({guardianList:{guardians:mockGuardianAccounts},managerInfos:[{address:'address',extraData:'extraData'}]}))).toEqual({verifierMap:mockVerifierMap,userGuardiansList:[mockUserGuardiansListItem1,mockUserGuardiansListItem2],userGuardianStatus:{'1@q.com&Gauss':mockUserGuardiansListItem1,'2@q.com&Gauss':mockUserGuardiansListItem2,guardianExpiredTime:undefined}});});});describe('setPreGuardianAction',function(){test('Action.payload is null, preGuardian will be reset',function(){expect(reducer({preGuardian:mockCurrentGuardian},(0,_actions.setPreGuardianAction)())).toEqual({preGuardian:undefined});});test('Action.payload exist, userGuardianStatus exist',function(){expect(reducer({preGuardian:undefined,userGuardianStatus:{'1@q.com&Gauss':Object.assign({},mockUserGuardiansListItem1,{status:undefined})}},(0,_actions.setPreGuardianAction)(mockCurrentGuardian))).toEqual({userGuardianStatus:{'1@q.com&Gauss':Object.assign({},mockUserGuardiansListItem1,{status:undefined})},preGuardian:Object.assign({},mockCurrentGuardian,{status:undefined})});});test('Action.payload exist, userGuardianStatus does not exist',function(){expect(reducer({preGuardian:undefined},(0,_actions.setPreGuardianAction)(mockCurrentGuardian))).toEqual({preGuardian:Object.assign({},mockCurrentGuardian,{status:undefined})});});});describe('setOpGuardianAction',function(){test('Action.payload is null, opGuardian will be reset',function(){expect(reducer({opGuardian:mockCurrentGuardian},(0,_actions.setOpGuardianAction)())).toEqual({opGuardian:undefined});});test('Action.payload exist, userGuardianStatus exist',function(){expect(reducer({opGuardian:undefined,userGuardianStatus:{'1@q.com&Gauss':Object.assign({},mockUserGuardiansListItem1,{status:undefined})}},(0,_actions.setOpGuardianAction)(mockCurrentGuardian))).toEqual({userGuardianStatus:{'1@q.com&Gauss':Object.assign({},mockUserGuardiansListItem1,{status:undefined})},opGuardian:Object.assign({},mockCurrentGuardian,{status:undefined})});});test('Action.payload exist, userGuardianStatus does not exist',function(){expect(reducer({opGuardian:undefined},(0,_actions.setOpGuardianAction)(mockCurrentGuardian))).toEqual({opGuardian:Object.assign({},mockCurrentGuardian,{status:undefined})});});});describe('setCurrentGuardianAction',function(){test('This action will update currentGuardian and userGuardianStatus',function(){var guardianItem={key:'1@q.com&Gauss',guardianType:0,identifierHash:'identifierHash1@q.com',guardianAccount:'1@q.com',isLoginAccount:false,salt:'salt'};var payload=Object.assign({},guardianItem,{key:'1@q.com&Gauss',status:'Verified'});expect(reducer({currentGuardian:guardianItem,userGuardianStatus:{'1@q.com&Gauss':guardianItem}},(0,_actions.setCurrentGuardianAction)(payload))).toEqual({currentGuardian:Object.assign({},guardianItem,{status:'Verified'}),userGuardianStatus:{'1@q.com&Gauss':Object.assign({},guardianItem,{status:'Verified'})}});expect(reducer({currentGuardian:guardianItem},(0,_actions.setCurrentGuardianAction)(payload))).toEqual({currentGuardian:Object.assign({},guardianItem,{status:'Verified'}),userGuardianStatus:{'1@q.com&Gauss':Object.assign({},guardianItem,{status:'Verified'})}});});});describe('setUserGuardianStatus',function(){test('this action will update userGuardianStatus',function(){var payload={'1@q.com&Gauss':{key:'1@q.com&Gauss',isLoginAccount:false,guardianAccount:'1@q.com',guardianType:0,identifierHash:'identifierHash1@q.com',salt:'salt'}};expect(reducer({userGuardianStatus:{}},(0,_actions.setUserGuardianStatus)(payload))).toEqual({userGuardianStatus:payload});});});describe('setUserGuardianItemStatus',function(){var userGuardianStatus={'1@q.com&Gauss':{key:'1@q.com&Gauss',isLoginAccount:false,guardianAccount:'1@q.com',guardianType:0,salt:'salt',identifierHash:'identifierHash1@q.com'}};var payload={key:'1@q.com&Gauss',signature:'signature',identifierHash:'identifierHash1@q.com',verificationDoc:'verificationDoc'};test('The key does not match, then there will throw an error',function(){expect(function(){return reducer({userGuardianStatus:userGuardianStatus},(0,_actions.setUserGuardianItemStatus)(Object.assign({},payload,{key:'2@q.com&Gauss',status:'Verifying'})));}).toThrow("Can't find this item");});test('The key does not match, userGuardianStatus does not exist',function(){expect(function(){return reducer({userGuardianStatus:undefined},(0,_actions.setUserGuardianItemStatus)(Object.assign({},payload,{key:'2@q.com&Gauss',status:'Verifying'})));}).toThrow;});test('The key exists, then there will be updated guardianItemStatus',function(){var payload={key:'1@q.com&Gauss',signature:'signature',verificationDoc:'verificationDoc'};expect(reducer({userGuardianStatus:userGuardianStatus,guardianExpiredTime:1111},(0,_actions.setUserGuardianItemStatus)(Object.assign({},payload,{key:'1@q.com&Gauss',status:'Verifying'})))).toEqual({userGuardianStatus:{'1@q.com&Gauss':{isLoginAccount:false,guardianAccount:'1@q.com',guardianType:0,key:'1@q.com&Gauss',salt:'salt',status:'Verifying',signature:'signature',verificationDoc:'verificationDoc',identifierHash:''}},guardianExpiredTime:1111});});test('The key exists, then generate guardianExpiredTime',function(){var state=reducer({userGuardianStatus:userGuardianStatus,guardianExpiredTime:undefined},(0,_actions.setUserGuardianItemStatus)(Object.assign({},payload,{status:'Verified'})));expect(state).toMatchObject({userGuardianStatus:userGuardianStatus,guardianExpiredTime:expect.any(Number)});});});describe('resetUserGuardianStatus',function(){test('this action will reset userGuardianStatus',function(){expect(reducer({userGuardianStatus:mockUserGuardianStatus},(0,_actions.resetUserGuardianStatus)())).toEqual({userGuardianStatus:{}});});});describe('setUserGuardianSessionIdAction',function(){var payload={key:'1@q.com&Gauss',verifierInfo:{sessionId:'sessionId',endPoint:'endPoint'}};var userGuardianStatus={'1@q.com&Gauss':{isLoginAccount:false,guardianAccount:'1@q.com',guardianType:0,key:'1@q.com&Gauss',identifierHash:'identifierHash1@q.com',salt:'salt'}};var guardian2={isLoginAccount:false,guardianAccount:'2@q.com',guardianType:0,key:'2@q.com&Gauss',identifierHash:'identifierHash2@q.com',salt:'salt'};var newUserGuardianStatus={'1@q.com&Gauss':{isLoginAccount:false,guardianAccount:'1@q.com',guardianType:0,key:'1@q.com&Gauss',identifierHash:'identifierHash1@q.com',salt:'salt',verifierInfo:{sessionId:'sessionId',endPoint:'endPoint'}}};test('The key does not exist',function(){var currentGuardian=guardian2;expect(function(){return reducer({currentGuardian:currentGuardian},(0,_actions.setUserGuardianSessionIdAction)(payload));}).toThrow("Can't find this item");expect(function(){return reducer({userGuardianStatus:userGuardianStatus,currentGuardian:currentGuardian},(0,_actions.setUserGuardianSessionIdAction)(payload));}).toThrow;});test('The key exists, currentGuardian`key is equal to key',function(){var currentGuardian={isLoginAccount:false,guardianAccount:'1@q.com',guardianType:0,key:'1@q.com&Gauss',identifierHash:'identifierHash1@q.com',salt:'salt'};expect(reducer({userGuardianStatus:userGuardianStatus,currentGuardian:currentGuardian},(0,_actions.setUserGuardianSessionIdAction)(payload))).toEqual({userGuardianStatus:newUserGuardianStatus,currentGuardian:Object.assign({},currentGuardian,{verifierInfo:{sessionId:'sessionId',endPoint:'endPoint'}})});});test('The key exists, currentGuardian`key is not equal to key',function(){var currentGuardian=guardian2;expect(reducer({userGuardianStatus:userGuardianStatus,currentGuardian:currentGuardian},(0,_actions.setUserGuardianSessionIdAction)(payload))).toEqual({userGuardianStatus:newUserGuardianStatus,currentGuardian:currentGuardian});expect(reducer({userGuardianStatus:userGuardianStatus},(0,_actions.setUserGuardianSessionIdAction)(payload))).toEqual({userGuardianStatus:newUserGuardianStatus});});});