var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _slice=require("./slice");var _actions=require("./actions");var _apiDid=require("../../../api/api-did");var _toolkit=require("@reduxjs/toolkit");jest.mock("../../../api/api-did");var reducer=_slice.paymentSlice.reducer;var state={buyFiatList:[],sellFiatList:[],achTokenInfo:undefined};var fiatList={currency:'EUR',country:'AD',payWayCode:'10001',payWayName:'Credit Card',fixedFee:'0.410000',rateFee:null,payMin:'15.000000',payMax:'5153.000000'};describe('fetchBuyFiatListAsync',function(){test('fetchBuyFiatListAsync will set buyFiatList successful',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_apiDid.request.payment.getFiatList).mockResolvedValue({data:[fiatList]});var store=(0,_toolkit.configureStore)({reducer:reducer});yield store.dispatch((0,_actions.fetchBuyFiatListAsync)());expect(store.getState().buyFiatList).toHaveLength(1);}));test('fetchBuyFiatListAsync failed',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_apiDid.request.payment.getFiatList).mockRejectedValue({error:'error'});var store=(0,_toolkit.configureStore)({reducer:reducer});yield store.dispatch((0,_actions.fetchBuyFiatListAsync)());expect(store.getState().buyFiatList).toHaveLength(0);}));});describe('fetchSellFiatListAsync',function(){test('fetchSellFiatListAsync will set sellFiatList successful',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_apiDid.request.payment.getFiatList).mockResolvedValue({data:[fiatList]});var store=(0,_toolkit.configureStore)({reducer:reducer});yield store.dispatch((0,_actions.fetchSellFiatListAsync)());expect(store.getState().sellFiatList).toHaveLength(1);}));test('fetchSellFiatListAsync failed',(0,_asyncToGenerator2.default)(function*(){jest.mocked(_apiDid.request.payment.getFiatList).mockRejectedValue({error:'error'});var store=(0,_toolkit.configureStore)({reducer:reducer});yield store.dispatch((0,_actions.fetchSellFiatListAsync)());expect(store.getState().sellFiatList).toHaveLength(0);}));});describe('setAchTokenInfo',function(){var achTokenInfo={token:'ELF',expires:3077};test('achTokenInfo is empty, will add achTokenInfo',(0,_asyncToGenerator2.default)(function*(){var res=reducer(state,(0,_actions.setAchTokenInfo)(achTokenInfo));expect(res.achTokenInfo).toEqual(achTokenInfo);}));test('achTokenInfo is exist, will update achTokenInfo',(0,_asyncToGenerator2.default)(function*(){var prevAchTokenInfo={token:'ELF',expires:3076};var res=reducer(Object.assign({},state,{achTokenInfo:prevAchTokenInfo}),(0,_actions.setAchTokenInfo)(achTokenInfo));expect(res.achTokenInfo).toEqual(achTokenInfo);}));});describe('resetPayment',function(){var achTokenInfo={token:'ELF',expires:3077};test('reset achTokenInfo',(0,_asyncToGenerator2.default)(function*(){var res=reducer(Object.assign({},state,{achTokenInfo:achTokenInfo}),(0,_actions.resetPayment)());expect(res.achTokenInfo).toBeUndefined();}));});