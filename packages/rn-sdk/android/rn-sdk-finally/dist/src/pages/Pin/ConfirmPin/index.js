var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=ConfirmPin;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _misc=require("../../../packages/constants/misc");var _PageContainer=_interopRequireDefault(require("../../../components/PageContainer"));var _react=_interopRequireWildcard(require("react"));var _deviceEvent=_interopRequireDefault(require("../../../utils/deviceEvent"));var _PinContainer=_interopRequireDefault(require("../../../components/PinContainer"));var _reactNative=require("react-native");var _UseBaseContainer=_interopRequireDefault(require("../../../model/container/UseBaseContainer"));var _entries=require("../../../config/entries");var _core=require("../../../model/verify/core");var _Loading=_interopRequireDefault(require("../../../components/Loading"));var _SetBiometrics=require("../SetBiometrics");var _CommonToast=_interopRequireDefault(require("../../../components/CommonToast"));var _biometric=require("../../../service/biometric");var _jsxFileName="/Users/fengfeiyang/aelf/portkey-wallet/packages/rn-sdk/android/rn-sdk-finally/src/pages/Pin/ConfirmPin/index.tsx";function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function ConfirmPin(_ref){var oldPin=_ref.oldPin,pin=_ref.pin,deliveredSetPinInfo=_ref.deliveredSetPinInfo;var _useState=(0,_react.useState)(),_useState2=(0,_slicedToArray2.default)(_useState,2),errorMessage=_useState2[0],setErrorMessage=_useState2[1];var pinRef=(0,_react.useRef)();var _useBaseContainer=(0,_UseBaseContainer.default)({entryName:_entries.PortkeyEntries.CONFIRM_PIN}),onFinish=_useBaseContainer.onFinish,navigateForResult=_useBaseContainer.navigateForResult;var onChangePin=(0,_react.useCallback)(function(){var _ref2=(0,_asyncToGenerator2.default)(function*(newPin){if(!oldPin)return;try{var canUse=(0,_biometric.isBiometricsCanUse)();var biometricsReady=(0,_biometric.authenticateBioReady)();if(yield canUse){if(yield biometricsReady){var res=yield(0,_SetBiometrics.touchAuth)();if(!(res!=null&&res.success)){_CommonToast.default.failError('Failed To Verify');return;}}(0,_core.changePin)(newPin);}else{(0,_core.changePin)(newPin);}navigateForResult(_entries.PortkeyEntries.ACCOUNT_SETTING_ENTRY,{params:{modified:true}});}catch(error){_CommonToast.default.failError(error);}});return function(_x){return _ref2.apply(this,arguments);};}(),[navigateForResult,oldPin]);var onSetPinSuccess=(0,_react.useCallback)(function(){var _ref3=(0,_asyncToGenerator2.default)(function*(confirmPin){var biometricsReady=yield(0,_biometric.authenticateBioReady)();if(biometricsReady){navigateForResult(_entries.PortkeyEntries.SET_BIO,{params:{pin:confirmPin,deliveredSetPinInfo:deliveredSetPinInfo}},function(){var _ref4=(0,_asyncToGenerator2.default)(function*(result){if((result==null?void 0:result.status)==='success'){onFinish({status:'success',data:{finished:true}});}else{var _pinRef$current;setErrorMessage('Failed to set biometrics');(_pinRef$current=pinRef.current)==null?void 0:_pinRef$current.reset();}});return function(_x3){return _ref4.apply(this,arguments);};}());}else{_Loading.default.show();var res=yield(0,_core.getVerifiedAndLockWallet)(deliveredSetPinInfo,confirmPin);_Loading.default.hide();if(res){onFinish({status:'success',data:{finished:true}});}else{var _pinRef$current2;setErrorMessage('network failure');(_pinRef$current2=pinRef.current)==null?void 0:_pinRef$current2.reset();}}});return function(_x2){return _ref3.apply(this,arguments);};}(),[deliveredSetPinInfo,navigateForResult,onFinish]);var onChangeText=(0,_react.useCallback)(function(){var _ref5=(0,_asyncToGenerator2.default)(function*(confirmPin){if(confirmPin.length!==_misc.PIN_SIZE){if(errorMessage)setErrorMessage(undefined);return;}if(confirmPin!==pin){var _pinRef$current3;(_pinRef$current3=pinRef.current)==null?void 0:_pinRef$current3.reset();return setErrorMessage('Pins do not match');}if(oldPin)return onChangePin(confirmPin);return onSetPinSuccess(confirmPin);});return function(_x4){return _ref5.apply(this,arguments);};}(),[pin,oldPin,onChangePin,onSetPinSuccess,errorMessage]);return _react.default.createElement(_PageContainer.default,{titleDom:true,type:"leftBack",backTitle:oldPin?'Change Pin':undefined,onGestureStartCallback:function onGestureStartCallback(){_deviceEvent.default.clearSetPin.emit('clearSetPin');},leftCallback:function leftCallback(){var _pinRef$current4;(_pinRef$current4=pinRef.current)==null?void 0:_pinRef$current4.reset();onFinish({status:'cancel',data:{finished:false}});},containerStyles:styles.container,scrollViewProps:{disabled:true},__self:this,__source:{fileName:_jsxFileName,lineNumber:112,columnNumber:5}},_react.default.createElement(_PinContainer.default,{showHeader:true,ref:pinRef,title:"Confirm Pin",errorMessage:errorMessage,onChangeText:onChangeText,__self:this,__source:{fileName:_jsxFileName,lineNumber:130,columnNumber:7}}));}var styles=_reactNative.StyleSheet.create({container:{flex:1}});