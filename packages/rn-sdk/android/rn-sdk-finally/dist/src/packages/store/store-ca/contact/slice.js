var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.initialState=exports.default=exports.contactSlice=void 0;var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _toolkit=require("@reduxjs/toolkit");var _actions=require("./actions");var _utils=require("./utils");var initialState=exports.initialState={lastModified:0,contactIndexList:(0,_utils.getInitContactIndexList)(),contactMap:{},contactRelationIdMap:{},contactIdMap:{},isImputation:false};var contactSlice=exports.contactSlice=(0,_toolkit.createSlice)({name:'contact',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(_actions.fetchContactListAsync.fulfilled,function(state,action){var _action$payload=action.payload,isInit=_action$payload.isInit,lastModified=_action$payload.lastModified,contactIndexList=_action$payload.contactIndexList,eventList=_action$payload.eventList,isImputation=_action$payload.isImputation;if(isInit&&contactIndexList!==undefined){state.contactIndexList=(0,_utils.sortContactIndexList)(contactIndexList);state.lastModified=lastModified;state.isImputation=isImputation;}if(!isInit&&eventList!==undefined){var _contactIndexList=(0,_toConsumableArray2.default)(state.contactIndexList);_contactIndexList=(0,_utils.executeEventToContactIndexList)(_contactIndexList,eventList);state.contactIndexList=(0,_utils.sortContactIndexList)(_contactIndexList);state.lastModified=lastModified;state.isImputation=isImputation;}if(state.contactIndexList.length===0){state.contactIndexList=(0,_utils.getInitContactIndexList)();}state.contactMap=(0,_utils.transIndexesToContactMap)(state.contactIndexList);state.contactRelationIdMap=(0,_utils.transIndexesToContactRelationIdMap)(state.contactIndexList);state.contactIdMap=(0,_utils.transIndexesToContactIdMap)(state.contactIndexList);}).addCase(_actions.fetchContactListAsync.rejected,function(_state,action){console.log('fetchContactListAsync.rejected: error',action.error.message);}).addCase(_actions.addContactAction,function(state,action){var _contactIndexList=(0,_toConsumableArray2.default)(state.contactIndexList);_contactIndexList=(0,_utils.executeEventToContactIndexList)(_contactIndexList,[action.payload]);state.contactIndexList=(0,_utils.sortContactIndexList)(_contactIndexList);state.contactMap=(0,_utils.transIndexesToContactMap)(state.contactIndexList);state.contactRelationIdMap=(0,_utils.transIndexesToContactRelationIdMap)(state.contactIndexList);state.contactIdMap=(0,_utils.transIndexesToContactIdMap)(state.contactIndexList);}).addCase(_actions.editContactAction,function(state,action){var _contactIndexList=(0,_toConsumableArray2.default)(state.contactIndexList);_contactIndexList=(0,_utils.executeEventToContactIndexList)(_contactIndexList,[action.payload]);state.contactIndexList=(0,_utils.sortContactIndexList)(_contactIndexList);state.contactMap=(0,_utils.transIndexesToContactMap)(state.contactIndexList);state.contactRelationIdMap=(0,_utils.transIndexesToContactRelationIdMap)(state.contactIndexList);state.contactIdMap=(0,_utils.transIndexesToContactIdMap)(state.contactIndexList);}).addCase(_actions.deleteContactAction,function(state,action){var _contactIndexList=(0,_toConsumableArray2.default)(state.contactIndexList);_contactIndexList=(0,_utils.executeEventToContactIndexList)(_contactIndexList,[action.payload]);state.contactIndexList=(0,_utils.sortContactIndexList)(_contactIndexList);state.contactMap=(0,_utils.transIndexesToContactMap)(state.contactIndexList);state.contactRelationIdMap=(0,_utils.transIndexesToContactRelationIdMap)(state.contactIndexList);state.contactIdMap=(0,_utils.transIndexesToContactIdMap)(state.contactIndexList);}).addCase(_actions.resetContact,function(state){state.contactIndexList=(0,_utils.getInitContactIndexList)();state.contactMap={};state.contactRelationIdMap={};state.contactIdMap={};state.lastModified=0;state.isImputation=false;}).addCase(_actions.readImputationAction,function(state,action){var _contactIndexList=(0,_toConsumableArray2.default)(state.contactIndexList);_contactIndexList=(0,_utils.executeEventToContactIndexList)(_contactIndexList,[action.payload]);state.contactIndexList=(0,_utils.sortContactIndexList)(_contactIndexList);state.contactMap=(0,_utils.transIndexesToContactMap)(state.contactIndexList);state.contactRelationIdMap=(0,_utils.transIndexesToContactRelationIdMap)(state.contactIndexList);state.contactIdMap=(0,_utils.transIndexesToContactIdMap)(state.contactIndexList);}).addCase(_actions.refreshContactMap,function(state){state.contactMap=(0,_utils.transIndexesToContactMap)(state.contactIndexList);state.contactRelationIdMap=(0,_utils.transIndexesToContactRelationIdMap)(state.contactIndexList);state.contactIdMap=(0,_utils.transIndexesToContactIdMap)(state.contactIndexList);});}});var _default=exports.default=contactSlice;