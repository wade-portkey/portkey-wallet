var _wallet=require("./wallet");var _network=require("../../constants/constants-ca/network");var _network2=require("./network");var _react=require("@testing-library/react");var _render=require("test/utils/render");var _setup=require("test/utils/setup");var _chainInfo=require("test/data/chainInfo");jest.mock("./wallet");describe('useCurrentNetworkInfo',function(){it('currentNetwork is TESTNET, and return successfully',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook=(0,_react.renderHook)(function(){return(0,_network2.useCurrentNetworkInfo)();}),result=_renderHook.result;expect(result.current).toEqual(_network.NetworkList[1]);});it('currentNetwork is MAIN, and return successfully',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook2=(0,_react.renderHook)(function(){return(0,_network2.useCurrentNetworkInfo)();}),result=_renderHook2.result;expect(result.current).toEqual(_network.NetworkList[0]);});it('currentNetwork is not exist in NetworkList, and return default NetworkList item',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('XXX'));var _renderHook3=(0,_react.renderHook)(function(){return(0,_network2.useCurrentNetworkInfo)();}),result=_renderHook3.result;expect(result.current).toEqual(_network.NetworkList[0]);});});describe('useCurrentApiUrl',function(){it('currentNetwork is TESTNET, and return NetworkList[0].apiUrl',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook4=(0,_react.renderHook)(function(){return(0,_network2.useCurrentApiUrl)();}),result=_renderHook4.result;expect(result.current).toEqual(_network.NetworkList[1].apiUrl);});});describe('useVerifierList',function(){it('verifierMap is undefined, and return []',function(){var state={guardians:{}};var _renderHookWithProvid=(0,_render.renderHookWithProvider)(_network2.useVerifierList,(0,_setup.setupStore)(state)),result=_renderHookWithProvid.result;expect(result.current).toEqual([]);});it('verifierMap is , and return ',function(){var verifierMapItem={'2ded6...68dbda8':{id:'2ded6...68dbda8',name:'CryptoGuardian',imageUrl:'https://localhost/CryptoGuardian.png',endPoints:['http://localhost'],verifierAddresses:['2bWw...dSb4hJz']}};var state={guardians:{verifierMap:[verifierMapItem]}};var _renderHookWithProvid2=(0,_render.renderHookWithProvider)(_network2.useVerifierList,(0,_setup.setupStore)(state)),result=_renderHookWithProvid2.result;expect(result.current).toEqual([verifierMapItem]);});});describe('useIsTestnet',function(){it('currentNetwork is TESTNET, and return true',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook5=(0,_react.renderHook)(function(){return(0,_network2.useIsTestnet)();}),result=_renderHook5.result;expect(result.current).toEqual(true);});it('currentNetwork is MAIN, and return false',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook6=(0,_react.renderHook)(function(){return(0,_network2.useIsTestnet)();}),result=_renderHook6.result;expect(result.current).toEqual(false);});});describe('useIsMainnet',function(){it('currentNetwork is TESTNET, and return false',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('TESTNET'));var _renderHook7=(0,_react.renderHook)(function(){return(0,_network2.useIsMainnet)();}),result=_renderHook7.result;expect(result.current).toEqual(false);});it('currentNetwork is MAIN, and return true',function(){jest.mocked(_wallet.useCurrentWallet).mockReturnValue((0,_chainInfo.currentWallet)('MAIN'));var _renderHook8=(0,_react.renderHook)(function(){return(0,_network2.useIsMainnet)();}),result=_renderHook8.result;expect(result.current).toEqual(true);});});