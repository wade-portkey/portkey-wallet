var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.customFetch=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _queryString=require("query-string");var defaultHeaders={Accept:'text/plain;v=1.0','Content-Type':'application/json',version:'v1.3.5'};function formatResponse(response){var result;try{result=JSON.parse(response);}catch(e){result=response;}return result;}var timeoutPromise=function timeoutPromise(delay){return new Promise(function(_resolve){var ids=setTimeout(function(){clearTimeout(ids);_resolve({type:'timeout'});},delay);});};var fetchFormat=function fetchFormat(requestConfig){var url=requestConfig.url,signal=requestConfig.signal,_requestConfig$params=requestConfig.params,params=_requestConfig$params===void 0?{}:_requestConfig$params,_requestConfig$method=requestConfig.method,method=_requestConfig$method===void 0?'GET':_requestConfig$method,headers=requestConfig.headers,resourceUrl=requestConfig.resourceUrl;var body=JSON.stringify(params);var uri=url;var _method=method.toUpperCase();if(_method==='GET'||_method==='DELETE'){uri=Object.keys(params).length>0?uri+"?"+(0,_queryString.stringify)(params):uri;body=undefined;}else{if(requestConfig.body)body=requestConfig.body;}if(resourceUrl!==undefined){uri+="/"+resourceUrl;}delete requestConfig.params;var myHeaders=new Headers();Object.entries(Object.assign({},defaultHeaders,headers)).forEach(function(_ref){var _ref2=(0,_slicedToArray2.default)(_ref,2),headerItem=_ref2[0],value=_ref2[1];myHeaders.append(headerItem,value);});return fetch(uri,Object.assign({},requestConfig,{method:_method,headers:myHeaders,signal:signal,body:body}));};var customFetch=exports.customFetch=function customFetch(url,_config){var _config$timeout;var control=new AbortController();var timeout=(_config$timeout=_config==null?void 0:_config.timeout)!=null?_config$timeout:8000;_config==null?true:delete _config.timeout;var config=Object.assign({},_config,{url:url,signal:control.signal,credentials:'omit'});return Promise.race([fetchFormat(config),timeoutPromise(timeout)]).then(function(result){return new Promise(function(resolve,reject){try{if(result.type==='timeout'){if(control.abort)control.abort();reject('Unstable network. Please try again later.');}else{var _result=result;if(_result.status===401){resolve({message:'unauthorized',status:401});}else{_result.text().then(function(text){var res=formatResponse(text||result.url+" "+result.status);if(result.status.toString()[0]!=='2'||!result.ok){reject(res?res:_result.statusText);return;}resolve(res);}).catch(function(err){return reject(err);});}}}catch(e){reject(e);}});});};