var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.getTokenContract=exports.getELFChainBalance=exports.getBalance=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _aelfSdk=_interopRequireDefault(require("aelf-sdk"));var _ContractBasic=require("../contracts/utils/ContractBasic");var privateKey1='96ab8ea91edbd17f80049daaa92949c1ef2356f1215fbc252e044c7b0b5a3e13';var wallet1=_aelfSdk.default.wallet.getWalletByPrivateKey(privateKey1);var getELFChainBalance=exports.getELFChainBalance=function(){var _ref=(0,_asyncToGenerator2.default)(function*(tokenContract,symbol,owner){var _ref2,_balance$balance,_balance,_balance2;var balance;if(tokenContract instanceof _ContractBasic.ContractBasic){var req=yield tokenContract.callViewMethod('GetBalance',{symbol:symbol,owner:owner});if(!req.error){balance=req.data;}}else{balance=yield tokenContract.GetBalance.call({symbol:symbol,owner:owner});}return(_ref2=(_balance$balance=(_balance=balance)==null?void 0:_balance.balance)!=null?_balance$balance:(_balance2=balance)==null?void 0:_balance2.amount)!=null?_ref2:0;});return function getELFChainBalance(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var getTokenContract=exports.getTokenContract=function(){var _ref3=(0,_asyncToGenerator2.default)(function*(rpcUrl,tokenAddress){var wallet=arguments.length>2&&arguments[2]!==undefined?arguments[2]:wallet1;if(!rpcUrl)return;var aelf=new _aelfSdk.default(new _aelfSdk.default.providers.HttpProvider(rpcUrl));return yield aelf.chain.contractAt(tokenAddress,wallet);});return function getTokenContract(_x4,_x5){return _ref3.apply(this,arguments);};}();var getBalance=exports.getBalance=function(){var _ref5=(0,_asyncToGenerator2.default)(function*(_ref4){var tokens=_ref4.tokens,currentAccount=_ref4.currentAccount,currentChain=_ref4.currentChain,tokenAddress=_ref4.tokenAddress,tokenContract=_ref4.tokenContract,rpcUrl=_ref4.rpcUrl,_ref4$delay=_ref4.delay,delay=_ref4$delay===void 0?10000:_ref4$delay;var tokensList=Array.isArray(tokens)?tokens.map(function(item){return item.symbol;}):[tokens.symbol];if(!(currentAccount!=null&&currentAccount.address))return tokensList.map(function(){return'';});var promise;var timer=setTimeout(function(){return Promise.reject();},delay);if(currentChain.chainType==='aelf'){var contract=tokenContract;if(!tokenContract)return Promise.reject();promise=tokensList.map(function(symbol){console.log(symbol,'symbol');if(symbol)return getELFChainBalance(tokenContract,symbol,currentAccount==null?void 0:currentAccount.address);});}else if(currentChain.chainType==='ethereum'){return Promise.reject();}else{throw Error('Not Support');}if(!promise)throw Error('Something error');var bs=yield Promise.all(promise);clearTimeout(timer);return bs;});return function getBalance(_x6){return _ref5.apply(this,arguments);};}();