var _dappState=require("test/data/dappState");var _render=require("test/utils/render");var _setup=require("test/utils/setup");var _dapp=require("./dapp");var walletHook=_interopRequireWildcard(require("./wallet"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}describe('useDapp',function(){test('get assets data successfully',function(){var _renderHookWithProvid=(0,_render.renderHookWithProvider)(_dapp.useDapp,(0,_setup.setupStore)(_dappState.DappState)),result=_renderHookWithProvid.result;expect(result.current).toEqual(_dappState.DappState.dapp);});test('failed to get assets data',function(){var _renderHookWithProvid2=(0,_render.renderHookWithProvider)(_dapp.useDapp,(0,_setup.setupStore)({})),result=_renderHookWithProvid2.result;expect(result.current).toBeUndefined();});});describe('useCurrentDappList',function(){beforeEach(function(){jest.restoreAllMocks();});test('get assets data successfully',function(){jest.spyOn(walletHook,'useWallet').mockReturnValue({currentNetwork:'TESTNET',walletAvatar:'',walletType:'aelf',walletName:'',chainList:[]});var _renderHookWithProvid3=(0,_render.renderHookWithProvider)(_dapp.useCurrentDappList,(0,_setup.setupStore)(_dappState.DappState)),result=_renderHookWithProvid3.result;expect(result.current).toEqual(_dappState.DappState.dapp.dappMap.TESTNET);});test('failed to get assets data',function(){jest.spyOn(walletHook,'useWallet').mockReturnValue({currentNetwork:'MAIN',walletAvatar:'',walletType:'aelf',walletName:'',chainList:[]});var _renderHookWithProvid4=(0,_render.renderHookWithProvider)(_dapp.useCurrentDappList,(0,_setup.setupStore)(_dappState.DappState)),result=_renderHookWithProvid4.result;expect(result.current).toEqual(_dappState.DappState.dapp.dappMap.MAIN);});});