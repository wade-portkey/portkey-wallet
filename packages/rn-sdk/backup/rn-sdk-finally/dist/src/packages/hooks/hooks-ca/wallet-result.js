var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useFetchWalletCAAddress=exports.getWalletCAAddressByApi=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _socketDid=_interopRequireDefault(require("../../socket/socket-did"));var _network=require("./network");var _wallet=require("../../api/api-did/utils/wallet");var _utils=require("../../utils");var _react=require("react");var _verifier=require("../../types/verifier");var getCreateResultBySocket=function getCreateResultBySocket(_ref){var type=_ref.type,apiUrl=_ref.apiUrl,clientId=_ref.clientId,requestId=_ref.requestId;return new Promise(function(resolve){console.log('getCreateResultBySocket');_socketDid.default.doOpen({url:apiUrl+"/ca",clientId:clientId});if(type===_verifier.VerificationType.register){var _Socket$onCaAccountRe=_socketDid.default.onCaAccountRegister({clientId:clientId,requestId:requestId},function(data){console.log('onCaAccountRegister',data);if(typeof data.body.registerStatus!=='string')return;resolve(Object.assign({},data.body,{status:data.body.registerStatus,message:data.body.registerMessage}));remove();}),remove=_Socket$onCaAccountRe.remove;}else{var _Socket$onCaAccountRe2=_socketDid.default.onCaAccountRecover({clientId:clientId,requestId:requestId},function(data){console.log('onCaAccountRecover',data);resolve(Object.assign({},data.body,{status:data.body.recoveryStatus,message:data.body.recoveryMessage}));_remove();}),_remove=_Socket$onCaAccountRe2.remove;}});};var getWalletCAAddressByApi=exports.getWalletCAAddressByApi=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(params){var result=yield(0,_wallet.requestCreateWallet)(params);console.log(result,'result===getWalletCAAddressByApi');if(!result||result.recoveryStatus==='pending'||result.registerStatus==='pending'){yield(0,_utils.sleep)(2000);return getWalletCAAddressByApi(params);}else{return Object.assign({},result,{status:result.recoveryStatus||result.registerStatus,message:result.recoveryMessage||result.registerMessage});}});return function getWalletCAAddressByApi(_x){return _ref2.apply(this,arguments);};}();var useFetchWalletCAAddress=exports.useFetchWalletCAAddress=function useFetchWalletCAAddress(){var apiUrl=(0,_network.useCurrentApiUrl)();var fetch=(0,_react.useCallback)(function(){var _ref3=(0,_asyncToGenerator2.default)(function*(params){return new Promise(function(resolve){getCreateResultBySocket({type:params.verificationType,apiUrl:apiUrl,clientId:params.clientId,requestId:params.requestId}).then(function(result){return resolve(Object.assign({},result,{Socket:_socketDid.default}));});getWalletCAAddressByApi({verificationType:params.verificationType,managerUniqueId:params.managerUniqueId}).then(function(result){return resolve(Object.assign({},result,{Socket:_socketDid.default}));});});});return function(_x2){return _ref3.apply(this,arguments);};}(),[apiUrl]);return fetch;};