var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useCommonNetworkInfo=useCommonNetworkInfo;exports.useSymbolImages=useSymbolImages;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _wallet=require("../../packages/constants/constants-ca/wallet");var _useEffectOnce=_interopRequireDefault(require("../../hooks/useEffectOnce"));var _chain=require("../../model/chain");var _network=require("../../model/hooks/network");var _core=require("../../model/verify/core");var _controller=require("../../network/controller");var _react=require("react");function useSymbolImages(){var _useState=(0,_react.useState)({}),_useState2=(0,_slicedToArray2.default)(_useState,2),symbolImages=_useState2[0],setSymbolImages=_useState2[1];(0,_useEffectOnce.default)(function(){_controller.NetworkController.getSymbolImage().then(function(result){var _result$result;setSymbolImages(((_result$result=result.result)==null?void 0:_result$result.symbolImages)||{});});});return symbolImages;}function useCommonNetworkInfo(){var symbolImages=useSymbolImages();var _useState3=(0,_react.useState)('MAIN'),_useState4=(0,_slicedToArray2.default)(_useState3,2),currentNetwork=_useState4[0],setCurrentNetwork=_useState4[1];var _useState5=(0,_react.useState)(_wallet.DEFAULT_TOKEN),_useState6=(0,_slicedToArray2.default)(_useState5,2),defaultToken=_useState6[0],setDefaultToken=_useState6[1];var _useState7=(0,_react.useState)(),_useState8=(0,_slicedToArray2.default)(_useState7,2),currentCaAddress=_useState8[0],setCurrentCaAddress=_useState8[1];(0,_useEffectOnce.default)((0,_asyncToGenerator2.default)(function*(){var _wallet$caInfo$caAddr,_wallet$caInfo;var n=yield(0,_network.getCurrentNetworkType)();setCurrentNetwork(n);var _yield$getCachedNetwo=yield(0,_chain.getCachedNetworkConfig)(),cachedDefaultToken=_yield$getCachedNetwo.defaultToken;setDefaultToken(cachedDefaultToken);var wallet=yield(0,_core.getTempWalletConfig)();setCurrentCaAddress((_wallet$caInfo$caAddr=(_wallet$caInfo=wallet.caInfo)==null?void 0:_wallet$caInfo.caAddress)!=null?_wallet$caInfo$caAddr:'');}));return{symbolImages:symbolImages,currentNetwork:currentNetwork,defaultToken:defaultToken,currentCaAddress:currentCaAddress};}