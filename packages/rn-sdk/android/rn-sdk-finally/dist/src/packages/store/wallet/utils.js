var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.changeEncryptStr=changeEncryptStr;exports.checkAccount=checkAccount;exports.checkAccountExists=checkAccountExists;exports.checkAccountNotExistByState=checkAccountNotExistByState;exports.checkPassword=checkPassword;exports.checkPasswordByStateMnemonic=checkPasswordByStateMnemonic;exports.createAccount=createAccount;exports.getAccountByWalletState=getAccountByWalletState;exports.handlePrivateKey=handlePrivateKey;exports.isWalletError=isWalletError;var _aes=_interopRequireDefault(require("../../utils/aes"));var _aelf=require("../../utils/aelf");var _type=require("./type");var _utils=require("../../utils");var _wallet=require("../../utils/wallet");function checkAccount(accountList,address){return accountList.find(function(item){return(0,_aelf.isEqAddress)(item.address,address);});}function checkPassword(AESEncryptMnemonic,password){return _aes.default.decrypt(AESEncryptMnemonic,password);}var walletError=(0,_utils.enumToMap)(_type.WalletError);function isWalletError(error){if(walletError[error==null?void 0:error.message]){return error.message;}return false;}function getAccountByWalletState(state,password){if(!state.walletInfo)throw new Error(_type.WalletError.noCreateWallet);var walletInfo=(0,_wallet.getAccountByMnemonic)({AESEncryptMnemonic:state.walletInfo.AESEncryptMnemonic,password:password,BIP44Path:state.nextBIP44Path});if(!walletInfo)throw new Error(_type.WalletError.passwordFailed);return walletInfo;}function checkAccountExists(state,walletInfo){if(!state.accountList)throw new Error(_type.WalletError.noCreateWallet);var checkAccountInfo=checkAccount(state.accountList,walletInfo.address);if(checkAccountInfo)throw{message:_type.WalletError.accountExists,accountInfo:JSON.stringify(checkAccountInfo)};}function createAccount(walletInfo,password,accountName,accountType){var accountInfo=(0,_wallet.formatAccountInfo)(walletInfo,password,accountName,accountType);if(!accountInfo)throw new Error(_type.WalletError.accountCreateFailed);return accountInfo;}function checkPasswordByStateMnemonic(AESEncryptMnemonic,password){if(!checkPassword(AESEncryptMnemonic,password))throw new Error(_type.WalletError.passwordFailed);}function checkAccountNotExistByState(accountList,account){if(!checkAccount(accountList,account))throw new Error(_type.WalletError.accountNotExist);}function changeEncryptStr(str,password,newPassword){console.log(str,password,'====password');var decryptStr=_aes.default.decrypt(str,password);if(!decryptStr)throw new Error(_type.WalletError.decryptionFailed);return _aes.default.encrypt(decryptStr,newPassword);}function handlePrivateKey(privateKey){var pkey=privateKey;if(pkey.slice(0,2)==='0x')pkey=pkey.slice(2);return pkey;}