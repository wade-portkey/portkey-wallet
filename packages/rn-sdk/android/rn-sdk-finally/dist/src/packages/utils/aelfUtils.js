var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.createNewWallet=createNewWallet;exports.getBalance=getBalance;exports.getDefaultWallet=getDefaultWallet;exports.getTokenInfo=getTokenInfo;exports.getTxResult=getTxResult;exports.sign=sign;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _aelfSdk=_interopRequireDefault(require("aelf-sdk"));var _buffer=require("buffer");var _index=require("./index");var Wallet=_aelfSdk.default.wallet;var wallet=Wallet.getWalletByPrivateKey('28805dd286a972f0ff268ba42646d5d952d770141bfec55c98e10619c268ecea');var instance=new _aelfSdk.default(new _aelfSdk.default.providers.HttpProvider('http://192.168.67.47:8000'));var TOKEN_CONTRACT='JRmBduh4nXWi1aXgdUsj5gJrzeZb2LxmrAbf7W99faZSvoAaE';function getTokenInfo(_x){return _getTokenInfo.apply(this,arguments);}function _getTokenInfo(){_getTokenInfo=(0,_asyncToGenerator2.default)(function*(symbol){var tokenContract=yield instance.chain.contractAt(TOKEN_CONTRACT,wallet);return tokenContract.GetTokenInfo.call({symbol:symbol});});return _getTokenInfo.apply(this,arguments);}function getDefaultWallet(){return wallet;}function getBalance(_x2){return _getBalance.apply(this,arguments);}function _getBalance(){_getBalance=(0,_asyncToGenerator2.default)(function*(_ref){var symbol=_ref.symbol;var tokenContract=yield instance.chain.contractAt(TOKEN_CONTRACT,wallet);return tokenContract.GetBalance.call({symbol:symbol,owner:wallet.address});});return _getBalance.apply(this,arguments);}function sign(){return _sign.apply(this,arguments);}function _sign(){_sign=(0,_asyncToGenerator2.default)(function*(){return Wallet.sign(_buffer.Buffer.from('1').toString('hex'),wallet.keyPair).toString('base64');});return _sign.apply(this,arguments);}function createNewWallet(){return _createNewWallet.apply(this,arguments);}function _createNewWallet(){_createNewWallet=(0,_asyncToGenerator2.default)(function*(){return _aelfSdk.default.wallet.createNewWallet();});return _createNewWallet.apply(this,arguments);}function getTxResult(_x3,_x4){return _getTxResult.apply(this,arguments);}function _getTxResult(){_getTxResult=(0,_asyncToGenerator2.default)(function*(aelfInstance,TransactionId){var reGetCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var notExistedReGetCount=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var txFun=aelfInstance.chain.getTxResult;var txResult=yield txFun(TransactionId);console.log(txResult,reGetCount,'====txResult');if(txResult.error&&txResult.errorMessage){throw Error(txResult.errorMessage.message||txResult.errorMessage.Message);}var result=(txResult==null?void 0:txResult.result)||txResult;if(!result){throw Error('Can not get transaction result.');}var lowerCaseStatus=result.Status.toLowerCase();if(lowerCaseStatus==='notexisted'){if(notExistedReGetCount>5)return result;yield(0,_index.sleep)(1000);notExistedReGetCount++;reGetCount++;return getTxResult(aelfInstance,TransactionId,reGetCount,notExistedReGetCount);}if(lowerCaseStatus==='pending'||lowerCaseStatus==='pending_validation'){if(reGetCount>20)return result;yield(0,_index.sleep)(1000);reGetCount++;return getTxResult(aelfInstance,TransactionId,reGetCount,notExistedReGetCount);}if(lowerCaseStatus==='mined'){return result;}throw Error(result.Error||"Transaction: "+result.Status);});return _getTxResult.apply(this,arguments);}