var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.updateCASyncState=exports.setWalletNameAction=exports.setOriginChainId=exports.setManagerInfo=exports.setChainListAction=exports.setCAInfoType=exports.setCAInfo=exports.resetWallet=exports.resetCaInfo=exports.getChainListAsync=exports.getCaHolderInfoAsync=exports.createWalletAction=exports.createWallet=exports.changePin=exports.changeNetworkType=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _utils=require("../../../api/api-did/es/utils");var _network=require("../../../constants/constants-ca/network");var _wallet=require("../../../utils/wallet");var _toolkit=require("@reduxjs/toolkit");var _aelfSdk=_interopRequireDefault(require("aelf-sdk"));var _api=require("./api");var createWallet=exports.createWallet=function createWallet(_ref){var walletInfo=_ref.walletInfo,pin=_ref.pin,networkType=_ref.networkType,caInfo=_ref.caInfo;return function(){var _ref2=(0,_asyncToGenerator2.default)(function*(dispatch){var pinMessage=(0,_wallet.checkPinInput)(pin);if(pinMessage)throw new Error(pinMessage);if(!walletInfo)walletInfo=_aelfSdk.default.wallet.createNewWallet();var walletObj=(0,_wallet.formatWalletInfo)(walletInfo,pin,'walletName');if(walletObj){var newWalletInfo=walletObj.walletInfo;dispatch(createWalletAction({walletInfo:newWalletInfo,networkType:networkType,caInfo:caInfo}));return true;}throw new Error('createWallet fail');});return function(_x){return _ref2.apply(this,arguments);};}();};var createWalletAction=exports.createWalletAction=(0,_toolkit.createAction)('wallet/createWallet');var setManagerInfo=exports.setManagerInfo=(0,_toolkit.createAction)('wallet/setManagerInfo');var setCAInfo=exports.setCAInfo=(0,_toolkit.createAction)('wallet/setCAInfo');var updateCASyncState=exports.updateCASyncState=(0,_toolkit.createAction)('wallet/updateCASyncState');var setCAInfoType=exports.setCAInfoType=(0,_toolkit.createAction)('wallet/setCAInfoType');var resetWallet=exports.resetWallet=(0,_toolkit.createAction)('wallet/resetWallet');var resetCaInfo=exports.resetCaInfo=(0,_toolkit.createAction)('wallet/resetCaInfo');var changePin=exports.changePin=(0,_toolkit.createAction)('wallet/changePin');var changeNetworkType=exports.changeNetworkType=(0,_toolkit.createAction)('wallet/changeNetworkType');var setChainListAction=exports.setChainListAction=(0,_toolkit.createAction)('wallet/setChainListAction');var getChainListAsync=exports.getChainListAsync=(0,_toolkit.createAsyncThunk)('wallet/getChainList',function(){var _ref4=(0,_asyncToGenerator2.default)(function*(type,_ref3){var _NetworkList$find;var getState=_ref3.getState,dispatch=_ref3.dispatch;var _ref5=getState(),_ref5$wallet=_ref5.wallet,currentNetwork=_ref5$wallet.currentNetwork,originChainId=_ref5$wallet.originChainId;var _networkType=type?type:currentNetwork;var baseUrl=(_NetworkList$find=_network.NetworkList.find(function(item){return item.networkType===_networkType;}))==null?void 0:_NetworkList$find.apiUrl;if(!baseUrl)throw Error('Unable to obtain the corresponding network');var response=yield(0,_api.getChainList)({baseUrl:baseUrl});if(!(response!=null&&response.items))throw Error('No data');dispatch(setChainListAction({chainList:response.items,networkType:_networkType}));return[response.items,response.items.find(function(item){return item.chainId===originChainId;})];});return function(_x2,_x3){return _ref4.apply(this,arguments);};}());var getCaHolderInfoAsync=exports.getCaHolderInfoAsync=(0,_toolkit.createAsyncThunk)('wallet/getCaHolderInfoAsync',function(){var _ref6=(0,_asyncToGenerator2.default)(function*(_,thunkAPI){var _NetworkList$find2,_walletInfo$caInfo$cu;var _ref7=thunkAPI.getState(),_ref7$wallet=_ref7.wallet,currentNetwork=_ref7$wallet.currentNetwork,walletInfo=_ref7$wallet.walletInfo;var baseUrl=(_NetworkList$find2=_network.NetworkList.find(function(item){return item.networkType===currentNetwork;}))==null?void 0:_NetworkList$find2.apiUrl;var caHash=walletInfo==null?void 0:(_walletInfo$caInfo$cu=walletInfo.caInfo[currentNetwork].AELF)==null?void 0:_walletInfo$caInfo$cu.caHash;if(!caHash||!baseUrl)return undefined;var caHolder;try{var response=yield(0,_utils.getCaHolder)(baseUrl,{caHash:caHash});console.log('getCaHolderEs',response);if(response.items&&response.items.length>0){caHolder=response.items[0];}}catch(err){console.log('getCaHolderEs: err',err);}if(!caHolder)return undefined;return{nickName:caHolder.nickName,userId:caHolder.userId};});return function(_x4,_x5){return _ref6.apply(this,arguments);};}());var setWalletNameAction=exports.setWalletNameAction=(0,_toolkit.createAction)('wallet/setWalletName');var setOriginChainId=exports.setOriginChainId=(0,_toolkit.createAction)('wallet/setOriginChainId');