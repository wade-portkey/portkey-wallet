Object.defineProperty(exports,"__esModule",{value:true});exports.useUpdateSessionInfo=exports.useIsInCurrentDappList=exports.useDiscover=exports.useDapp=exports.useCurrentDappList=exports.useCurrentDappInfo=void 0;var _react=require("react");var _index=require("./index");var _wallet=require("./wallet");var _=require("./..");var _actions=require("packages/types/store-ca/dapp/actions");var _network=require("./network");var _session=require("../../utils/session");var useDapp=exports.useDapp=function useDapp(){return(0,_index.useAppCASelector)(function(state){return state.dapp;});};var useDiscover=exports.useDiscover=function useDiscover(){return(0,_index.useAppCASelector)(function(state){return state.discover;});};var useCurrentDappList=exports.useCurrentDappList=function useCurrentDappList(){var _useDapp=useDapp(),dappMap=_useDapp.dappMap;var _useWallet=(0,_wallet.useWallet)(),currentNetwork=_useWallet.currentNetwork;return(0,_react.useMemo)(function(){return dappMap[currentNetwork];},[currentNetwork,dappMap]);};var useIsInCurrentDappList=exports.useIsInCurrentDappList=function useIsInCurrentDappList(){var list=useCurrentDappList();return(0,_react.useCallback)(function(origin){return!!(list!=null&&list.some(function(ele){return ele.origin===origin.trim();}));},[list]);};var useCurrentDappInfo=exports.useCurrentDappInfo=function useCurrentDappInfo(origin){var list=useCurrentDappList();return(0,_react.useMemo)(function(){return list==null?void 0:list.find(function(item){return item.origin===origin;});},[list,origin]);};var useUpdateSessionInfo=exports.useUpdateSessionInfo=function useUpdateSessionInfo(){var dispatch=(0,_.useAppCommonDispatch)();var _useCurrentNetworkInf=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf.networkType;var _useCurrentWalletInfo=(0,_wallet.useCurrentWalletInfo)(),caHash=_useCurrentWalletInfo.caHash;return(0,_react.useCallback)(function(params){if(!caHash)return;var sessionInfo=undefined;if(params.expiredPlan){var manager=params.manager,expiredPlan=params.expiredPlan;if(!(manager!=null&&manager.keyPair))return;var expiredTime=(0,_session.formatExpiredTime)(expiredPlan);var baseSession={origin:params.origin,expiredPlan:expiredPlan,expiredTime:expiredTime,keyPair:manager.keyPair,managerAddress:manager.address,caHash:caHash};var signature=(0,_session.signSession)(baseSession);sessionInfo={createTime:Date.now(),signature:signature,expiredPlan:expiredPlan,expiredTime:expiredTime};}if(params.manager)delete params.manager;return dispatch((0,_actions.updateSessionInfo)(Object.assign({},params,{networkType:params.networkType||networkType,sessionInfo:sessionInfo})));},[caHash,dispatch,networkType]);};