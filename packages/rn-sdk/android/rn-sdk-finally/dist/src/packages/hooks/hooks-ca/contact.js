var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useReadImputation=exports.usePortkeyContactList=exports.useLocalContactSearch=exports.useIsMyContact=exports.useIsImputation=exports.useIndexAndName=exports.useEditContact=exports.useDeleteContact=exports.useContactRelationIdMap=exports.useContactList=exports.useContactInfo=exports.useContactIdMap=exports.useContact=exports.useCheckContactName=exports.useCheckContactMap=exports.useChatContactFlatList=exports.useAllContactList=exports.useAelfContactList=exports.useAddStrangerContact=exports.useAddContact=exports.REFRESH_DELAY_TIME=void 0;var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _apiDid=require("../../api/api-did");var _network=require("./network");var _react=require("react");var _actions=require("packages/types/store-ca/contact/actions");var _=require("./..");var _aelf=require("../../utils/aelf");var _assets=require("../../constants/constants-ca/assets");var _im=require("./im");var _wallet=require("./wallet");var REFRESH_DELAY_TIME=exports.REFRESH_DELAY_TIME=1.5*1000;var useAddContact=exports.useAddContact=function useAddContact(){var dispatch=(0,_.useAppCommonDispatch)();var currentNetworkInfo=(0,_network.useCurrentNetworkInfo)();return(0,_react.useCallback)(function(){var _ref=(0,_asyncToGenerator2.default)(function*(contactItem){var response=yield _apiDid.request.contact.addContact({baseURL:currentNetworkInfo.apiUrl,params:contactItem});dispatch((0,_actions.addContactAction)(response));setTimeout(function(){dispatch((0,_actions.fetchContactListAsync)());},REFRESH_DELAY_TIME);return response;});return function(_x){return _ref.apply(this,arguments);};}(),[currentNetworkInfo.apiUrl,dispatch]);};var useAddStrangerContact=exports.useAddStrangerContact=function useAddStrangerContact(){var dispatch=(0,_.useAppCommonDispatch)();var addStranger=(0,_im.useAddStranger)();return(0,_react.useCallback)(function(){var _ref2=(0,_asyncToGenerator2.default)(function*(relationId){var response=yield addStranger(relationId);dispatch((0,_actions.addContactAction)(response.data));setTimeout(function(){dispatch((0,_actions.fetchContactListAsync)());},REFRESH_DELAY_TIME);return response;});return function(_x2){return _ref2.apply(this,arguments);};}(),[addStranger,dispatch]);};var useEditContact=exports.useEditContact=function useEditContact(){var dispatch=(0,_.useAppCommonDispatch)();var currentNetworkInfo=(0,_network.useCurrentNetworkInfo)();return(0,_react.useCallback)(function(){var _ref3=(0,_asyncToGenerator2.default)(function*(contactItem){var response=yield _apiDid.request.contact.editContact({baseURL:currentNetworkInfo.apiUrl,resourceUrl:""+contactItem.id,params:contactItem});dispatch((0,_actions.editContactAction)(response));setTimeout(function(){dispatch((0,_actions.fetchContactListAsync)());},REFRESH_DELAY_TIME);return response;});return function(_x3){return _ref3.apply(this,arguments);};}(),[currentNetworkInfo.apiUrl,dispatch]);};var useDeleteContact=exports.useDeleteContact=function useDeleteContact(){var dispatch=(0,_.useAppCommonDispatch)();var currentNetworkInfo=(0,_network.useCurrentNetworkInfo)();return(0,_react.useCallback)(function(){var _ref4=(0,_asyncToGenerator2.default)(function*(contactItem){var response=yield _apiDid.request.contact.deleteContact({baseURL:currentNetworkInfo.apiUrl,resourceUrl:""+contactItem.id});dispatch((0,_actions.deleteContactAction)(Object.assign({},contactItem,{isDeleted:true})));setTimeout(function(){dispatch((0,_actions.fetchContactListAsync)());},REFRESH_DELAY_TIME);return response;});return function(_x4){return _ref4.apply(this,arguments);};}(),[currentNetworkInfo.apiUrl,dispatch]);};var useCheckContactName=exports.useCheckContactName=function useCheckContactName(){var currentNetworkInfo=(0,_network.useCurrentNetworkInfo)();return(0,_react.useCallback)(function(contactName){return _apiDid.request.contact.checkContactName({baseURL:currentNetworkInfo.apiUrl,params:{name:contactName}});},[currentNetworkInfo.apiUrl]);};var useContact=exports.useContact=function useContact(){var isFetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var isInit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dispatch=(0,_.useAppCommonDispatch)();(0,_react.useEffect)(function(){isFetch&&dispatch((0,_actions.fetchContactListAsync)(isInit));},[dispatch,isFetch,isInit]);return(0,_.useAppCommonSelector)(function(state){return state.contact;});};var useContactList=exports.useContactList=function useContactList(){var contact=(0,_.useAppCommonSelector)(function(state){return state.contact;});return(0,_react.useMemo)(function(){var result=[];contact.contactIndexList.filter(function(ele){return ele.contacts.length!==0;}).map(function(ele){result=[].concat((0,_toConsumableArray2.default)(result),(0,_toConsumableArray2.default)(ele.contacts));});return result;},[contact.contactIndexList]);};var useIsImputation=exports.useIsImputation=function useIsImputation(){return(0,_.useAppCASelector)(function(state){return state.contact.isImputation;});};var useReadImputation=exports.useReadImputation=function useReadImputation(){var dispatch=(0,_.useAppCommonDispatch)();var currentNetworkInfo=(0,_network.useCurrentNetworkInfo)();return(0,_react.useCallback)(function(){var _ref5=(0,_asyncToGenerator2.default)(function*(contactItem){var response=yield _apiDid.request.contact.readImputation({baseURL:currentNetworkInfo.apiUrl,params:{contactId:contactItem.id}});dispatch((0,_actions.readImputationAction)(Object.assign({},contactItem,{isImputation:false,modificationTime:Date.now()})));setTimeout(function(){dispatch((0,_actions.fetchContactListAsync)());},REFRESH_DELAY_TIME);return response;});return function(_x5){return _ref5.apply(this,arguments);};}(),[currentNetworkInfo.apiUrl,dispatch]);};var useCheckContactMap=exports.useCheckContactMap=function useCheckContactMap(){var contact=(0,_.useAppCommonSelector)(function(state){return state.contact;});var dispatch=(0,_.useAppCommonDispatch)();(0,_react.useEffect)(function(){if(contact.lastModified===0)return;var contactMapLength=Object.keys(contact.contactMap).length;var contactRelationIdMapLength=Object.keys(contact.contactRelationIdMap||{}).length;var contactIdMapLength=Object.keys(contact.contactIdMap||{}).length;if(contactMapLength===0||contactRelationIdMapLength===0||contactIdMapLength===0){dispatch((0,_actions.refreshContactMap)());}},[]);};var useContactRelationIdMap=exports.useContactRelationIdMap=function useContactRelationIdMap(){return(0,_.useAppCommonSelector)(function(state){return state.contact.contactRelationIdMap;});};var useContactIdMap=exports.useContactIdMap=function useContactIdMap(){return(0,_.useAppCommonSelector)(function(state){return state.contact.contactIdMap;});};var useContactInfo=exports.useContactInfo=function useContactInfo(_ref6){var relationId=_ref6.relationId,contactId=_ref6.contactId;var contactIdMap=useContactIdMap();var contactRelationIdMap=useContactRelationIdMap();return(0,_react.useMemo)(function(){var contactInfo;if(contactId){var _contactIdMap$contact;contactInfo=contactIdMap==null?void 0:(_contactIdMap$contact=contactIdMap[contactId])==null?void 0:_contactIdMap$contact[0];}if(contactInfo)return contactInfo;if(relationId){var _contactRelationIdMap;contactInfo=contactRelationIdMap==null?void 0:(_contactRelationIdMap=contactRelationIdMap[relationId])==null?void 0:_contactRelationIdMap[0];}return contactInfo;},[contactId,contactIdMap,contactRelationIdMap,relationId]);};var useAllContactList=exports.useAllContactList=function useAllContactList(){var _useContact=useContact(),contactIndexList=_useContact.contactIndexList;return(0,_react.useMemo)(function(){return contactIndexList.filter(function(c){return c.contacts.length>0;});},[contactIndexList]);};var usePortkeyContactList=exports.usePortkeyContactList=function usePortkeyContactList(){var _useContact2=useContact(false,false),contactIndexList=_useContact2.contactIndexList;return(0,_react.useMemo)(function(){var hasValueList=contactIndexList.filter(function(c){return c.contacts.length>0;});var portkeyContactList=[];hasValueList.forEach(function(_ref7){var index=_ref7.index,contacts=_ref7.contacts;portkeyContactList.push({index:index,contacts:contacts.filter(function(contact){var _contact$imInfo;return(_contact$imInfo=contact.imInfo)==null?void 0:_contact$imInfo.portkeyId;})});});return portkeyContactList;},[contactIndexList]);};var useLocalContactSearch=exports.useLocalContactSearch=function useLocalContactSearch(){var _useContact3=useContact(false,false),contactIndexList=_useContact3.contactIndexList;return(0,_react.useCallback)(function(value,type){var filterList=[];if(type===_assets.ContactsTab.Chats){contactIndexList.forEach(function(_ref8){var index=_ref8.index,contacts=_ref8.contacts;filterList.push({index:index,contacts:contacts.filter(function(contact){var _contact$imInfo2;return(_contact$imInfo2=contact.imInfo)==null?void 0:_contact$imInfo2.portkeyId;})});});}else{filterList=contactIndexList;}var notEmptyFilterList=filterList.filter(function(item){var _item$contacts;return(item==null?void 0:(_item$contacts=item.contacts)==null?void 0:_item$contacts.length)>0;});if(!value){var temp=[];notEmptyFilterList.forEach(function(_ref9){var contacts=_ref9.contacts;temp.push.apply(temp,(0,_toConsumableArray2.default)(contacts));});return{contactFilterList:temp,contactIndexFilterList:notEmptyFilterList};}var contactIndexFilterList=[];var contactFilterList=[];if(value.length<=16){var _v=value.trim().toLowerCase();notEmptyFilterList.forEach(function(_ref10){var index=_ref10.index,contacts=_ref10.contacts;contactIndexFilterList.push({index:index,contacts:contacts.filter(function(contact){var _contact$caHolderInfo;if(contact!=null&&(_contact$caHolderInfo=contact.caHolderInfo)!=null&&_contact$caHolderInfo.walletName){var _contact$name,_contact$caHolderInfo2,_contact$caHolderInfo3;return(contact==null?void 0:(_contact$name=contact.name)==null?void 0:_contact$name.trim().toLowerCase().includes(_v))||(contact==null?void 0:(_contact$caHolderInfo2=contact.caHolderInfo)==null?void 0:(_contact$caHolderInfo3=_contact$caHolderInfo2.walletName)==null?void 0:_contact$caHolderInfo3.trim().toLowerCase().includes(_v));}else{var _contact$name2,_contact$imInfo3,_contact$imInfo3$name;return(contact==null?void 0:(_contact$name2=contact.name)==null?void 0:_contact$name2.trim().toLowerCase().includes(_v))||(contact==null?void 0:(_contact$imInfo3=contact.imInfo)==null?void 0:(_contact$imInfo3$name=_contact$imInfo3.name)==null?void 0:_contact$imInfo3$name.trim().toLowerCase().includes(_v));}})});});}else{notEmptyFilterList.forEach(function(_ref11){var index=_ref11.index,contacts=_ref11.contacts;contactIndexFilterList.push({index:index,contacts:contacts.filter(function(contact){var _contact$imInfo4,_contact$imInfo4$port;return(contact==null?void 0:(_contact$imInfo4=contact.imInfo)==null?void 0:(_contact$imInfo4$port=_contact$imInfo4.portkeyId)==null?void 0:_contact$imInfo4$port.trim())===value.trim();})});});var suffix='';if(value.includes('_')){var arr=value.split('_');if(!(0,_aelf.isAelfAddress)(arr[arr.length-1])){suffix=arr[arr.length-1];}}value=(0,_aelf.getAelfAddress)(value);notEmptyFilterList.forEach(function(_ref12){var index=_ref12.index,contacts=_ref12.contacts;contactIndexFilterList.push({index:index,contacts:contacts.filter(function(contact){return contact.addresses.some(function(ads){return ads.address===value&&(!suffix||suffix===ads.chainId);});})});});}contactIndexFilterList.forEach(function(_ref13){var contacts=_ref13.contacts;contactFilterList.push.apply(contactFilterList,(0,_toConsumableArray2.default)(contacts));});return{contactFilterList:contactFilterList,contactIndexFilterList:contactIndexFilterList};},[contactIndexList]);};var useChatContactFlatList=exports.useChatContactFlatList=function useChatContactFlatList(){var _useContact4=useContact(false,false),contactIndexList=_useContact4.contactIndexList;return(0,_react.useMemo)(function(){var contactFlatList=[];contactIndexList.forEach(function(_ref14){var contacts=_ref14.contacts;contacts.map(function(contact){var _contact$imInfo5;if((_contact$imInfo5=contact.imInfo)!=null&&_contact$imInfo5.relationId){contactFlatList.push(contact);}});});return contactFlatList;},[contactIndexList]);};var useIsMyContact=exports.useIsMyContact=function useIsMyContact(){var contactRelationIdMap=useContactRelationIdMap();var contactIdMap=useContactIdMap();var _useWallet=(0,_wallet.useWallet)(),userId=_useWallet.userId;return(0,_react.useCallback)(function(_ref15){var relationId=_ref15.relationId,contactId=_ref15.contactId;var checkRelationId=false,checkContactId=false;var checkIsMe=relationId===userId;if(relationId&&contactRelationIdMap){var _contactRelationIdMap2;checkRelationId=(contactRelationIdMap==null?void 0:(_contactRelationIdMap2=contactRelationIdMap[relationId])==null?void 0:_contactRelationIdMap2.length)>0;}if(contactId&&contactIdMap){var _contactIdMap$contact2;checkContactId=(contactIdMap==null?void 0:(_contactIdMap$contact2=contactIdMap[contactId])==null?void 0:_contactIdMap$contact2.length)>0;}return(checkRelationId||checkContactId)&&!checkIsMe;},[contactIdMap,contactRelationIdMap,userId]);};var useIndexAndName=exports.useIndexAndName=function useIndexAndName(item){var _item$caHolderInfo2,_item$imInfo2;return(0,_react.useMemo)(function(){var _item$caHolderInfo,_item$imInfo;var name=(item==null?void 0:item.name)||(item==null?void 0:(_item$caHolderInfo=item.caHolderInfo)==null?void 0:_item$caHolderInfo.walletName)||(item==null?void 0:(_item$imInfo=item.imInfo)==null?void 0:_item$imInfo.name)||'';var index=name==null?void 0:name.substring(0,1).toLocaleUpperCase();return{index:index,name:name};},[item==null?void 0:(_item$caHolderInfo2=item.caHolderInfo)==null?void 0:_item$caHolderInfo2.walletName,item==null?void 0:(_item$imInfo2=item.imInfo)==null?void 0:_item$imInfo2.name,item==null?void 0:item.name]);};var useAelfContactList=exports.useAelfContactList=function useAelfContactList(){var _useContact5=useContact(),contactIndexList=_useContact5.contactIndexList;return(0,_react.useMemo)(function(){var copyContactIndexList=JSON.parse(JSON.stringify(contactIndexList));var indexList=[];copyContactIndexList.forEach(function(item){var filterContacts=[];item.contacts.forEach(function(contact){var filterAddresses=[];contact.addresses.forEach(function(address){if((address==null?void 0:address.chainName)==='aelf'){filterAddresses.push(address);}});if((filterAddresses==null?void 0:filterAddresses.length)>0){filterContacts.push(Object.assign({},contact,{addresses:filterAddresses}));}});indexList.push({index:item.index,contacts:filterContacts});});return indexList;},[contactIndexList]);};