var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.PortkeyAccountService=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _core=require("../../model/verify/core");var _inversify=require("inversify");var _handler=require("../../model/contract/handler");var _wallet=require("../../model/wallet");var _error=require("../error");var _types=require("./types");var _dec,_class;var PortkeyAccountService=exports.PortkeyAccountService=(_dec=(0,_inversify.injectable)(),_dec(_class=function(){function PortkeyAccountService(){(0,_classCallCheck2.default)(this,PortkeyAccountService);}(0,_createClass2.default)(PortkeyAccountService,[{key:"callCaContractMethod",value:function(){var _callCaContractMethod=(0,_asyncToGenerator2.default)(function*(props){var methodName=props.contractMethodName,params=props.params,isViewMethod=props.isViewMethod;if(!(yield(0,_core.isWalletUnlocked)())){throw new _error.AccountError(1001);}var contract=yield(0,_handler.getContractInstance)();var _yield$getUnlockedWal=yield(0,_wallet.getUnlockedWallet)(),address=_yield$getUnlockedWal.address;var isParamsEmpty=Object.values(params!=null?params:{}).length===0;try{var result=isViewMethod?yield contract.callSendMethod(methodName,address,isParamsEmpty?null:params):yield contract.callViewMethod(methodName,isParamsEmpty?null:params);if(!result)throw new _error.AccountError(1002);var data=result.data,error=result.error;var jsData={status:!error?'success':'fail',data:data,error:error};if(result.transactionId){jsData=Object.assign({},jsData,{transactionId:result.transactionId});}return jsData;}catch(e){throw new _error.AccountError(9999,(e==null?void 0:e.message)||e);}});function callCaContractMethod(_x){return _callCaContractMethod.apply(this,arguments);}return callCaContractMethod;}()},{key:"getWalletInfo",value:function(){var _getWalletInfo=(0,_asyncToGenerator2.default)(function*(){if(!(yield(0,_core.isWalletUnlocked)())){throw new _error.AccountError(1001);}var wallet=yield(0,_wallet.getUnlockedWallet)();return wallet;});function getWalletInfo(){return _getWalletInfo.apply(this,arguments);}return getWalletInfo;}()},{key:"getWalletState",value:function(){var _getWalletState=(0,_asyncToGenerator2.default)(function*(){var exist=yield(0,_core.isWalletExists)();var unlocked=yield(0,_core.isWalletUnlocked)();return exist?unlocked?_types.WalletState.UNLOCKED:_types.WalletState.LOCKED:_types.WalletState.NONE;});function getWalletState(){return _getWalletState.apply(this,arguments);}return getWalletState;}()},{key:"lockWallet",value:function(){var _lockWallet=(0,_asyncToGenerator2.default)(function*(){if(!(yield(0,_core.isWalletUnlocked)())){console.warn(_error.errorMap.get(1001));return false;}yield(0,_core.lockWallet)();return true;});function lockWallet(){return _lockWallet.apply(this,arguments);}return lockWallet;}()},{key:"exitWallet",value:function(){var _exitWallet=(0,_asyncToGenerator2.default)(function*(){if(!(yield(0,_core.isWalletUnlocked)())){console.warn(_error.errorMap.get(1001));return false;}try{var res=yield(0,_handler.callRemoveManagerMethod)();if(!res.error){(0,_core.exitWallet)();}else{console.warn(res.error);return false;}return true;}catch(e){throw new _error.AccountError(9999,(e==null?void 0:e.message)||e);}});function exitWallet(){return _exitWallet.apply(this,arguments);}return exitWallet;}()}]);return PortkeyAccountService;}())||_class);