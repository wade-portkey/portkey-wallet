var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});var _exportNames={useIMState:true,useIMHasNextNetMapState:true,useIMChannelListNetMapState:true,useIMChannelMessageListNetMapState:true,useIMRelationIdNetMapNetMapState:true,useIMRelationTokenNetMapNetMapState:true,useUnreadCount:true,useInitIM:true,useRelationId:true,useIsIMReady:true,useEditIMContact:true};exports.useUnreadCount=exports.useRelationId=exports.useIsIMReady=exports.useInitIM=exports.useIMState=exports.useIMRelationTokenNetMapNetMapState=exports.useIMRelationIdNetMapNetMapState=exports.useIMHasNextNetMapState=exports.useIMChannelMessageListNetMapState=exports.useIMChannelListNetMapState=exports.useEditIMContact=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _im=_interopRequireWildcard(require("../../../im"));var _react=require("react");var _=require("./..");var _network=require("../network");var _2=require("../..");var _actions=require("packages/types/store-ca/im/actions");var _type=require("packages/types/store-ca/im/type");var _contact=require("../contact");var _channelList=require("./channelList");Object.keys(_channelList).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;if(key in exports&&exports[key]===_channelList[key])return;Object.defineProperty(exports,key,{enumerable:true,get:function get(){return _channelList[key];}});});var _actions2=require("packages/types/store-ca/contact/actions");var _channel=require("./channel");Object.keys(_channel).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;if(key in exports&&exports[key]===_channel[key])return;Object.defineProperty(exports,key,{enumerable:true,get:function get(){return _channel[key];}});});function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var useIMState=exports.useIMState=function useIMState(){return(0,_.useAppCASelector)(function(state){return state.im;});};var useIMHasNextNetMapState=exports.useIMHasNextNetMapState=function useIMHasNextNetMapState(){return(0,_.useAppCASelector)(function(state){return state.im.hasNextNetMap;});};var useIMChannelListNetMapState=exports.useIMChannelListNetMapState=function useIMChannelListNetMapState(){return(0,_.useAppCASelector)(function(state){return state.im.channelListNetMap;});};var useIMChannelMessageListNetMapState=exports.useIMChannelMessageListNetMapState=function useIMChannelMessageListNetMapState(){return(0,_.useAppCASelector)(function(state){return state.im.channelMessageListNetMap;});};var useIMRelationIdNetMapNetMapState=exports.useIMRelationIdNetMapNetMapState=function useIMRelationIdNetMapNetMapState(){return(0,_.useAppCASelector)(function(state){return state.im.relationIdNetMap;});};var useIMRelationTokenNetMapNetMapState=exports.useIMRelationTokenNetMapNetMapState=function useIMRelationTokenNetMapNetMapState(){return(0,_.useAppCASelector)(function(state){return state.im.relationTokenNetMap;});};var useUnreadCount=exports.useUnreadCount=function useUnreadCount(){var _useState=(0,_react.useState)(0),_useState2=(0,_slicedToArray2.default)(_useState,2),unreadCount=_useState2[0],setUnreadCount=_useState2[1];(0,_react.useEffect)(function(){var _im$getMessageCount=_im.default.getMessageCount(),unreadCount=_im$getMessageCount.unreadCount;setUnreadCount(unreadCount);var _im$registerMessageCo=_im.default.registerMessageCountObserver(function(e){setUnreadCount(e.unreadCount);}),remove=_im$registerMessageCo.remove;return remove;},[]);return unreadCount;};var useInitIM=exports.useInitIM=function useInitIM(){var _useCurrentNetworkInf=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf.networkType;var dispatch=(0,_2.useAppCommonDispatch)();var isInitRef=(0,_react.useRef)(false);var channelListNetMap=useIMChannelListNetMapState();var list=(0,_react.useMemo)(function(){var _channelListNetMap$ne;return(channelListNetMap==null?void 0:(_channelListNetMap$ne=channelListNetMap[networkType])==null?void 0:_channelListNetMap$ne.list)||[];},[channelListNetMap,networkType]);var listRef=(0,_react.useRef)(list);listRef.current=list;var relationTokenNetMap=useIMRelationTokenNetMapNetMapState();var relationToken=(0,_react.useMemo)(function(){return relationTokenNetMap==null?void 0:relationTokenNetMap[networkType];},[networkType,relationTokenNetMap]);var unreadMessageUpdate=(0,_react.useCallback)(function(){var _ref=(0,_asyncToGenerator2.default)(function*(e){var rawMsg=e['im-message'];if(!listRef.current.find(function(item){return item.channelUuid===rawMsg.channelUuid;})){console.log('addChannel',rawMsg.channelUuid);dispatch((0,_actions.addChannel)({network:networkType,channel:{status:_im.ChannelStatusEnum.NORMAL,channelUuid:rawMsg.channelUuid,displayName:'',channelIcon:rawMsg.fromAvatar||'',channelType:_im.ChannelTypeEnum.P2P,unreadMessageCount:1,mentionsCount:0,lastMessageType:rawMsg.type,lastMessageContent:rawMsg.content,lastPostAt:rawMsg.createAt,mute:rawMsg.mute,pin:false,toRelationId:rawMsg.from}}));try{var _channelInfo$members$;var _yield$im$service$get=yield _im.default.service.getChannelInfo({channelUuid:rawMsg.channelUuid}),channelInfo=_yield$im$service$get.data;dispatch((0,_actions.updateChannelAttribute)({network:networkType,channelId:rawMsg.channelUuid,value:{displayName:((_channelInfo$members$=channelInfo.members.find(function(item){return item.relationId===rawMsg.from;}))==null?void 0:_channelInfo$members$.name)||'',pin:channelInfo.pin,channelType:channelInfo.type}}));}catch(error){console.log('UnreadMsg addChannel error:',error);}}else{console.log('updateUnreadChannel');dispatch((0,_actions.updateChannelAttribute)({network:networkType,channelId:rawMsg.channelUuid,value:{lastMessageType:rawMsg.type,lastMessageContent:rawMsg.content,lastPostAt:rawMsg.createAt},type:_type.UpdateChannelAttributeTypeEnum.UPDATE_UNREAD_CHANNEL}));}});return function(_x){return _ref.apply(this,arguments);};}(),[dispatch,networkType]);var unreadMessageUpdateRef=(0,_react.useRef)(unreadMessageUpdate);unreadMessageUpdateRef.current=unreadMessageUpdate;var setTokenUpdate=(0,_react.useCallback)(function(token){console.log('setRelationToken',token);dispatch((0,_actions.setRelationToken)({network:networkType,token:token}));},[dispatch,networkType]);var setTokenUpdateRef=(0,_react.useRef)(setTokenUpdate);setTokenUpdateRef.current=setTokenUpdate;var initIm=(0,_react.useCallback)(function(){var _ref2=(0,_asyncToGenerator2.default)(function*(account,caHash){if(![_im.IMStatusEnum.INIT,_im.IMStatusEnum.DESTROY].includes(_im.default.status))return;if(isInitRef.current)return;isInitRef.current=true;_im.default.registerUnreadMsgObservers(function(){var _ref3=(0,_asyncToGenerator2.default)(function*(e){unreadMessageUpdateRef.current(e);});return function(_x4){return _ref3.apply(this,arguments);};}());_im.default.registerTokenObserver(function(){var _ref4=(0,_asyncToGenerator2.default)(function*(e){setTokenUpdateRef.current(e);});return function(_x5){return _ref4.apply(this,arguments);};}());var result=yield _im.default.init(account,caHash,relationToken);dispatch((0,_actions2.fetchContactListAsync)());if(result!=null&&result.relationId){dispatch((0,_actions.setRelationId)({network:networkType,relationId:result.relationId}));}isInitRef.current=false;return result;});return function(_x2,_x3){return _ref2.apply(this,arguments);};}(),[dispatch,networkType,relationToken]);return initIm;};var useRelationId=exports.useRelationId=function useRelationId(){var _useCurrentNetworkInf2=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf2.networkType;var relationIdNetMap=useIMRelationIdNetMapNetMapState();return(0,_react.useMemo)(function(){return relationIdNetMap==null?void 0:relationIdNetMap[networkType];},[networkType,relationIdNetMap]);};var useIsIMReady=exports.useIsIMReady=function useIsIMReady(){return[_im.IMStatusEnum.AUTHORIZED,_im.IMStatusEnum.CONNECTED].includes(_im.default.status);};var useEditIMContact=exports.useEditIMContact=function useEditIMContact(){var _useCurrentNetworkInf3=(0,_network.useCurrentNetworkInfo)(),networkType=_useCurrentNetworkInf3.networkType;var dispatch=(0,_2.useAppCommonDispatch)();var editContact=(0,_contact.useEditContact)();var _useChannelList=(0,_channelList.useChannelList)(),rawList=_useChannelList.rawList;var rawListRef=(0,_react.useRef)(rawList);rawListRef.current=rawList;return(0,_react.useCallback)(function(){var _ref5=(0,_asyncToGenerator2.default)(function*(params,walletName){var result=yield editContact(params);var channel=rawListRef.current.find(function(item){return item.toRelationId===params.relationId;});if(channel){dispatch((0,_actions.updateChannelAttribute)({network:networkType,channelId:channel.channelUuid,value:{displayName:params.name||walletName||''}}));}return result;});return function(_x6,_x7){return _ref5.apply(this,arguments);};}(),[dispatch,editContact,networkType]);};